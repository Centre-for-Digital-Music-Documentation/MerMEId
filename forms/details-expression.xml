<?xml version="1.0" encoding="UTF-8"?>
<h:html xmlns:h="http://www.w3.org/1999/xhtml" 
    xmlns:xi="http://www.w3.org/2001/XInclude"
    xmlns:xxi="http://orbeon.org/oxf/xml/xinclude"
    xmlns:xf="http://www.w3.org/2002/xforms" 
    xmlns:xxf="http://orbeon.org/oxf/xml/xforms"
    xmlns:oxf="http://www.orbeon.com/oxf/processors"
    xmlns:fr="http://orbeon.org/oxf/xml/form-runner"
    xmlns:ev="http://www.w3.org/2001/xml-events" 
    xmlns:xl="http://www.w3.org/1999/xlink"
    xmlns:xs="http://www.w3.org/2001/XMLSchema" 
    xmlns:m="http://www.music-encoding.org/ns/mei"
    xmlns:opensearch="http://a9.com/-/spec/opensearch/1.1/"
    xmlns:dcm="http://www.kb.dk/dcm">
    
    <!--
        Expression component (e.g. movement) data editor 
        Danish Centre for Music Editing (DCM) 
        Royal Danish Library
        Axel Teich Geertinger, 2012â€“2017
        atge@kb.dk
    -->
    
    <h:head>
        
        <h:title id="PageTitle">MerMEId - Editing component metadata</h:title>
        
        <h:meta http-equiv="Content-Type" content="application/xhtml+xml"/>
        
        <h:script type="text/javascript" src="http:/editor/js/editor.js"/>
        <h:script type="text/javascript" src="http:/editor/js/tinymce.js">
            //<!-- tinymce configuration -->
        </h:script>
        
        <h:style type="text/css" media="all"> 
            @import "/editor/style/tab_style.css"; 
            @import "/editor/style/xform_style.css";
            @import "/editor/style/model_editor_style.css";
        </h:style>
        
        <xi:include href="details-form-model.xml" parse="xml"/>
        
        <!-- XBL components -->
        <xi:include href="includes/attribute_editor.xbl" parse="xml"/>
        <xi:include href="includes/authority.xbl" parse="xml"/>
        <xi:include href="includes/create.xbl" parse="xml"/>
        <xi:include href="includes/date_editor.xbl" parse="xml"/>
        <xi:include href="includes/dropdown_month_date.xbl" parse="xml"/>
        <xi:include href="includes/element_buttons.xbl" parse="xml"/>
        <xi:include href="includes/id.xbl" parse="xml"/>
        <xi:include href="includes/relator.xbl" parse="xml"/>
        <xi:include href="includes/person_list.xbl" parse="xml"/>
        
    </h:head>
    
    <h:body class="music" onload="initialize();">
        
        <h:div class="main">
            
            <xf:group id="form-group">
                
                <xi:include href="edit-form-event-handlers.xml" parse="xml"/>
                
                <xf:var name="uri" 
                    select="concat(instance('parameters')/dcm:orbeon_dir,
                    '?uri=',
                    instance('parameters')/dcm:form_home,
                    'edit-music-case.xml&amp;doc=',
                    instance('parameters')/dcm:xml_file)"/>
                
                <h:div class="details_form_header">
                    
                    <xi:include href="includes/exit-warning-dialog.xml" parse="xml"/> 
                    
                    <xi:include href="includes/close-details-button.xml" parse="xml"/>
                    
                    <xi:include href="includes/topmenu.xml" parse="xml"/>  
                                        
                    <xf:group ref="instance('data-instance')//m:expression[@xml:id=instance('temp')/id]">
                        <h:h3>
                            <!-- Show "movement path" to component -->
                            <xf:group ref="../../../../../parent::*[name()='work']">
                                <xf:group ref=".[normalize-space(@n)]"> 
                                    <xf:output value="concat(@n, '. ')"/>
                                </xf:group>
                                <xf:output value="m:title[1]"/>
                                <xf:group ref=".[normalize-space(m:title[1]) and normalize-space(m:tempo[1])]">                 
                                    <xf:output value="'. '"/>
                                </xf:group>
                                <xf:output value="m:tempo"/>
                                <xf:group ref=".[normalize-space(concat(m:title[1],m:tempo,@n))='']">
                                    <xf:output value="'[component]'"/> 
                                </xf:group> / 
                            </xf:group>
                            <!-- Version titles (i.e. top-level expression titles) are ignored -->
                            <xf:group ref="../../../parent::*[(name()='work' or name()='expression') and not(name(parent::*)='expressionList')]">
                                <xf:group ref=".[normalize-space(@n)]"> 
                                    <xf:output value="concat(@n, '. ')"/>
                                </xf:group>
                                <xf:output value="m:title[1]"/>
                                <xf:group ref=".[normalize-space(m:title[1]) and normalize-space(m:tempo[1])]">                 
                                    <xf:output value="'. '"/>
                                </xf:group>
                                <xf:output value="m:tempo"/>
                                <xf:group ref=".[normalize-space(concat(m:title[1],m:tempo,@n))='']">
                                    <xf:output value="'[component]'"/> 
                                </xf:group> / 
                            </xf:group>
                            <xf:group ref="../parent::*[(name()='work' or name()='expression') and not(name(parent::*)='expressionList')]">
                                <xf:group ref=".[normalize-space(@n)]"> 
                                    <xf:output value="concat(@n, '. ')"/>
                                </xf:group>
                                <xf:output value="m:title[1]"/>
                                <xf:group ref=".[normalize-space(m:title[1]) and normalize-space(m:tempo[1])]">                 
                                    <xf:output value="'. '"/>
                                </xf:group>
                                <xf:output value="m:tempo"/>
                                <xf:group ref=".[normalize-space(concat(m:title[1],m:tempo,@n))='']">
                                    <xf:output value="'[component]'"/> 
                                </xf:group> / 
                            </xf:group>
                            <xf:group ref=".[normalize-space(@n)]"> 
                                <xf:output value="concat(@n, '. ')"/>
                            </xf:group>
                            <xf:output value="m:title[1]"/>
                            <xf:group ref=".[normalize-space(m:title[1]) and normalize-space(m:tempo[1])]">                 
                                <xf:output value="'. '"/>
                            </xf:group>
                            <xf:output value="m:tempo"/>
                            <xf:group ref=".[normalize-space(concat(m:title[1],m:tempo,@n))='']">
                                <xf:output value="'[this component]'"/> 
                            </xf:group> 
                            <!-- end path -->
                            <xf:output value="instance('temp')[changed='true']/change_marker"/>
                            <dcm:id ref="."/>
                        </h:h3> 
                    </xf:group>
                </h:div>
                
                
                <h:div class="blocklabel strong">Component <h:a class="help">&#160;?<h:span class="comment">A music "component" (in FRBR terms: component expression) 
                    describes a specific section of the music, e.g. a movement, act, or scene</h:span></h:a>
                    <dcm:attribute-editor ref="."/>
                </h:div>
                
                
                <xf:group ref="instance('data-instance')//m:expression[@xml:id=instance('temp')/id]">
                    <xf:var name="num_ex" as="string">
                        <xxf:value select="count(../m:expression)"/>
                    </xf:var>
                    <xf:var name="is_component" as="string">
                        <xxf:value select="if (local-name(..)='componentList') then 'true' else 'false'"/>
                    </xf:var>
                    <xf:var name="binding" select="."/>
                    
                    <h:div class="vertical_spacer"/>
                    <h:div class="vertical_spacer"/>
                    
                    <h:div>                        
                        <xf:input ref="@n" class="short">
                            <xf:label class="fixed_width">No. <h:a class="help">&#160;?<h:span 
                                class="comment">Movement, section or scene numbers may be entered either here 
                                or as part of the title. No spaces, punctuation or special characters are allowed in this field (which is type xs:token).
                                Use the title field instead to enter values using special characters or spaces.</h:span></h:a></xf:label>
                        </xf:input>
                    </h:div>
                    <xf:repeat nodeset="m:title" id="repeat-version-titles" class="input_group">
                        <h:div>
                            <h:label class="fixed_width">Title</h:label><xi:include 
                                href="includes/input_with_xmllang.xml" parse="xml"/>
                            <dcm:element-buttons 
                                triggers="all" 
                                nodeset="m:title" 
                                index="repeat-version-titles"
                                origin="instance('empty-instance')/m:meiHead/m:workList/m:work/m:expressionList/m:expression[1]/m:title"/>
                            <dcm:attribute-editor/>
                        </h:div>
                    </xf:repeat>   
                    
                    <h:div>                 
                        <dcm:create nodeset="m:tempo"
                            label="Add tempo"
                            origin="instance('empty-instance')/m:meiHead/m:workList/m:work/m:expressionList/m:expression/m:tempo"/>
                        <xf:input ref="m:tempo" class="maxlong">
                            <xf:label class="fixed_width">Tempo</xf:label>
                        </xf:input>
                        <xf:trigger appearance="minimal" ref="m:tempo">
                            <xf:label><h:img src="{instance('parameters')/dcm:server_name}/editor/images/remove.gif" alt="Delete" title="Delete row"/></xf:label>
                            <xf:action ev:event="DOMActivate">
                                <xf:delete nodeset="."/>
                            </xf:action>
                        </xf:trigger>
                        <dcm:attribute-editor ref="m:tempo"/>
                        <h:br clear="all"/>  
                        <xi:include href="includes/meter-input.xml" parse="xml"/>
                    </h:div>            
                    <dcm:create nodeset="m:key"
                        label="Add key"
                        origin="instance('empty-instance')/m:meiHead/m:workList/m:work/m:expressionList/m:expression/m:key"/>
                    <xf:group ref="m:key">
                        <xi:include href="includes/key_select.xml" parse="xml"/>
                        <xf:trigger appearance="minimal">
                            <xf:label><h:img src="{instance('parameters')/dcm:server_name}/editor/images/remove.gif" alt="Delete" title="Delete row"/></xf:label>
                            <xf:action ev:event="DOMActivate">
                                <xf:delete nodeset="."/>
                            </xf:action>
                        </xf:trigger>
                        <dcm:attribute-editor/>
                    </xf:group>
                    
                    <h:br clear="all"/>
                    <h:br clear="all"/>
                    <dcm:create
                        nodeset="m:perfDuration"
                        label="Add duration"
                        origin="instance('empty-instance')/m:meiHead/m:workList/m:work/m:expressionList/m:expression[1]/m:perfDuration"/>
                    <h:div>
                        <xf:repeat nodeset="m:perfDuration" id="details-expression-duration-repeat">
                            <xf:input ref=".">
                                <xf:label class="fixed_width">Duration <h:a class="help">&#160;?<h:span 
                                    class="comment">Duration can be indicated in any form, such as "01:23:00", "4&apos;33&apos;&apos;" or "approx. 10 minutes". 
                                </h:span></h:a></xf:label>
                            </xf:input>
                            <dcm:element-buttons
                                triggers="remove"
                                nodeset="m:perfDuration"
                                index="details-expression-duration-repeat"
                                origin="instance('empty-instance')/m:meiHead/m:workList/m:work/m:expressionList/m:expression[1]/m:perfDuration"/>
                            <dcm:attribute-editor/>
                        </xf:repeat>
                    </h:div>
                    <dcm:create 
                        nodeset="m:extent"
                        label="Add extent"
                        origin="instance('empty-instance')/m:meiHead/m:workList/m:work/m:expressionList/m:expression[1]/m:extent"/>
                    <xf:repeat nodeset="m:extent" id="details-expression-extent-repeat">
                        <h:div>
                            <xf:input ref=".">
                                <xf:label class="fixed_width">Extent <h:a class="help">&#160;?<h:span 
                                    class="comment">Extent in any medium other than time: number of measures or pages, for instance.
                                    Non-standard units of measurement can be included in the text field.
                                </h:span></h:a></xf:label>
                            </xf:input>
                            <xi:include href="includes/unit-select.xml" parse="xml"/>
                            <!-- to make <extent> repeatable, add 'add' to triggers -->
                            <dcm:element-buttons
                                triggers="remove" 
                                nodeset="m:extent" 
                                index="details-expression-extent-repeat"
                                origin="instance('empty-instance')/m:meiHead/m:workList/m:work/m:expressionList/m:expression[1]/m:extent"/>
                            <dcm:attribute-editor/>
                        </h:div>
                    </xf:repeat>
                    
                    <h:fieldset>
                        <h:legend>Incipit                         
                            <h:a class="help">&#160;?<h:span class="comment">Both 
                                music and text incipits may be added. Music incipits can be added as links to graphic files or
                                entered using an encoding such as <em>Plaine &amp; Easie Code</em>. <br/>
                                Incipits encoded in MEI will be displayed in the HTML preview but are not editable in MerMEId.
                            </h:span></h:a>
                        </h:legend>
                        <dcm:create 
                            nodeset="m:incip"
                            label="Add incipits"
                            origin="instance('empty-instance')/m:meiHead/m:workList/m:work/m:expressionList/m:expression[1]/m:incip"/>
                        <xi:include href="includes/incipit-input.xml" parse="xml"/>

                    </h:fieldset>
                    
                    <h:fieldset>
                        <h:legend>Persons <h:a class="help">&#160;?<h:span 
                            class="comment">Persons with connection to this particular component
                            only, e.g. an arranger, or a text author in a collection of songs 
                            with different authors.<h:br/>
                            Not for persons appearing in this component (characters). 
                        </h:span></h:a></h:legend>
                        <dcm:create 
                            nodeset="m:contributor"
                            label="Add list of persons"
                            origin="instance('empty-instance')/m:meiHead/m:workList/m:work/m:expressionList/m:expression[1]/m:contributor"/>
                        <xf:group ref="m:contributor">
                            <xi:include href="includes/person-input.xml"/>
                        </xf:group>
                    </h:fieldset>
                    
                    
                    <!-- Movement-specific instrumentation selection -->
                    <!-- Overall intrumentation is assumed to be defined at top expression level, not work level -->
                    <xf:var name="topLevelInstrumentation" select="ancestor-or-self::m:expression[local-name(../..)='work']/m:perfMedium/m:perfResList"/>
                    
                    <xf:group ref=".[$topLevelInstrumentation[*]]" class="instr_subselection">
                        
                        <h:fieldset>
                            <h:legend>Instruments/Performers selection <h:a class="help">&#160;?<h:span 
                                class="comment">A sub-selection of the performers and ensembles defined at version level may 
                                be specified here. You may choose to only specify certain performers which you want to to be explicitly listed, 
                                e.g. only the sub-selection of soloists playing or characters appearing in this particular movement, but not the entire orchestra.
                            </h:span></h:a></h:legend>
                            <dcm:create ref="m:perfMedium"
                                nodeset="m:perfResList"
                                label="Instruments/Performers"
                                origin="instance('empty-instance')//m:expression/m:componentList/m:expression/m:perfMedium"/>
                            <dcm:create nodeset="m:perfMedium"
                                label="Instruments/Performers"
                                origin="instance('empty-instance')//m:expression/m:componentList/m:expression/m:perfMedium"/>
                            <xf:var name="thisInstrumentation" select="m:perfMedium/m:perfResList"/>
                            <xf:group ref="$thisInstrumentation">
                                <!-- select ensembles -->
                                <xf:repeat nodeset="$topLevelInstrumentation/m:perfResList">
                                    <xf:group ref=".[count(preceding-sibling::m:perfResList)=0]">
                                        <h:span class="blocklabel">Ensembles</h:span>
                                    </xf:group>
                                    <h:fieldset>
                                        <xf:var name="topLevelEnsemble" select="."/>
                                        <xf:var name="id" select="@xml:id"/>
                                        <!-- the reference to the corresponding top level instrumentation is provided by the n attribute -->
                                        
                                        <xf:group ref=".[@xml:id=$thisInstrumentation/m:perfResList/@n]">
                                            <!-- there is a copy of the corresponding instrVoiceGrp at this sub-level -->
                                            <xf:group ref="$thisInstrumentation/m:perfResList[@n=$id]">
                                                <h:legend>
                                                    <xf:trigger appearance="minimal">
                                                        <xf:label><h:img src="{instance('parameters')/dcm:server_name}/editor/images/yes.png" alt="yes" title="Click to remove this ensemble"/>
                                                        </xf:label>
                                                        <xf:action ev:event="DOMActivate">
                                                            <xf:delete context="$thisInstrumentation" nodeset="m:perfResList[@n=$id]"/>
                                                            <xf:dispatch name="xforms-value-changed" target="form-group"/>
                                                        </xf:action>
                                                    </xf:trigger>
                                                    <xf:input ref="m:head" class="long"/>                                                                
                                                    <dcm:attribute-editor ref="m:head"/>
                                                    <xf:select1 ref="@codedval" class="long">
                                                        <xf:label>Standard code <h:a class="help">&#160;?<h:span 
                                                            class="comment">Choosing a standard MARC code optimizes data  
                                                            compatibility and interchangeability with other systems. <h:br/>
                                                            A code should be supplied also when you do not want the ensemble 
                                                            to have a heading (name).
                                                        </h:span></h:a></xf:label>
                                                        <xf:itemset nodeset="instance('ensembles')/m:perfResList">
                                                            <xf:label><xf:output value="if (@codedval!='') then concat(@codedval, ' (',m:head,')') else '- Please select -'"/></xf:label>
                                                            <xf:value ref="@codedval"/>
                                                        </xf:itemset>
                                                        <xf:action ev:event="xforms-value-changed">
                                                            <xf:var name="ensemble" select="."></xf:var>
                                                            <xf:action if="../m:head=''">
                                                                <!-- set ensemble name if empty -->
                                                                <xf:setvalue ref="../m:head" value="instance('ensembles')/m:perfResList[@codedval=$ensemble]"/>
                                                            </xf:action>
                                                        </xf:action>
                                                    </xf:select1>
                                                    <dcm:attribute-editor ref="."/>
                                                </h:legend>
                                                <h:div class="vertical_spacer"/> 
                                            </xf:group>
                                        </xf:group>
                                        
                                        <xf:group ref=".[not(@xml:id=$thisInstrumentation/m:perfResList/@n)]">
                                            <!-- a copy of this perfResList does not exist at this sub-level yet -->
                                            <h:legend>
                                                <xf:trigger appearance="minimal">
                                                    <xf:label><h:img src="{instance('parameters')/dcm:server_name}/editor/images/no.png" alt="no" title="Click to add this ensemble"/>
                                                        <h:span class="disabled">
                                                            <xf:output value="if (normalize-space(m:head)) then m:head else '[ensemble]'"/>
                                                        </h:span>
                                                    </xf:label>
                                                    <xf:action ev:event="DOMActivate">
                                                        <!-- put a copy in the temp instance and turn it into a reference before putting it in place -->
                                                        <xf:delete context="instance('temp')/element" nodeset="*"/>
                                                        <xf:insert context="instance('temp')/element" nodeset="m:perfResList" origin="$topLevelEnsemble"/>
                                                        <!-- add @n and xml:id if missing -->
                                                        <xf:insert context="instance('temp')/element/*[1]" nodeset="m:perfResList[not(@n)]" 
                                                            origin="xxf:attribute('n','')"/>
                                                        <!-- move the main element's @xml:id to @n for identification (to do: add attribute @sameas for this?) -->
                                                        <xf:setvalue ref="instance('temp')/element/*[1]/@n" value="instance('temp')/element/*[1]/@xml:id"/>
                                                        <!-- delete instrVoice child elements; they can be added individually later -->
                                                        <xf:delete context="instance('temp')/element/m:perfResList" nodeset="m:perfRes"/>
                                                        <!-- generate new xml:ids -->
                                                        <xf:setvalue context="instance('temp')/element//*/@xml:id" 
                                                            value="concat(name(..),'_',substring(digest(string(random(true)), 'MD5', 'hex'),1,8))"/>
                                                        <!-- copy the instrumentation to the sub-level expression -->
                                                        <xf:insert context="$thisInstrumentation" nodeset="m:perfResList" 
                                                            origin="instance('temp')/element/m:perfResList"/>
                                                        <!-- move the new element into place according to the top level instrumentation -->
                                                        <!-- keep moving down until the order fits the model or reaching the end -->
                                                        <xf:action while="$topLevelEnsemble/preceding-sibling::m:perfResList/@xml:id[.!=$id][.=$thisInstrumentation/m:perfResList[@n[.=$id]]/following-sibling::m:perfResList/@n]
                                                            and count($thisInstrumentation/m:perfResList[@n=$id]/preceding-sibling::*)+1 &lt; count($thisInstrumentation/*)">
                                                            <xf:var name="pos" select="count($thisInstrumentation/m:perfResList[@n=$id]/preceding-sibling::*)+1"/>
                                                            <!-- move new element down one position -->
                                                            <xf:insert context="$thisInstrumentation" origin="$thisInstrumentation/*[$pos]"
                                                                nodeset="*" at="$pos+1"/>
                                                            <xf:delete context="$thisInstrumentation" nodeset="*" at="$pos"/>
                                                        </xf:action>                                                    
                                                        <!-- end moving -->
                                                        <xf:dispatch name="xforms-value-changed" target="form-group"/>
                                                    </xf:action>
                                                </xf:trigger>
                                            </h:legend>
                                        </xf:group>
                                        
                                        
                                        <!-- performers within this ensemble -->
                                        <!-- show only if the ensemble is checked -->
                                        <xf:group ref="$thisInstrumentation/m:perfResList[@n=$topLevelEnsemble/@xml:id]">
                                            <xf:var name="thisEnsemble" select="."/>
                                            <xf:repeat nodeset="$topLevelEnsemble/m:perfRes">
                                                <xf:var name="thisTopLevelPerformer" select="."/>
                                                <xf:var name="perfId" select="@xml:id"/>
                                                <h:div><h:img src="{instance('parameters')/dcm:server_name}/editor/images/spacer.png" style="height: 14px; width: 11px"/>
                                                    <xf:group ref=".[@xml:id=$thisEnsemble/m:perfRes/@n]">
                                                        <!-- checked -->
                                                        <xf:trigger appearance="minimal">
                                                            <xf:label><h:img src="{instance('parameters')/dcm:server_name}/editor/images/yes.png" 
                                                                alt="yes" title="Click to remove this performer"/>
                                                            </xf:label>
                                                            <xf:action ev:event="DOMActivate">
                                                                <xf:delete context="$thisEnsemble" nodeset="m:perfRes[@n=$thisTopLevelPerformer/@xml:id]"/>
                                                                <xf:dispatch name="xforms-value-changed" target="form-group"/>
                                                            </xf:action>
                                                        </xf:trigger>
                                                        <xf:group ref="$thisEnsemble/m:perfRes[@n=$perfId]">
                                                            <xi:include href="includes/instrvoice-input.xml" parse="xml"/>
                                                        </xf:group>
                                                    </xf:group>
                                                    <xf:group ref=".[not(@xml:id=$thisEnsemble/m:perfRes/@n)]">
                                                        <!-- unchecked -->
                                                        <xf:trigger appearance="minimal">
                                                            <xf:label><h:img src="{instance('parameters')/dcm:server_name}/editor/images/no.png" alt="no" title="Click to add this performer"/>
                                                                <h:span class="disabled">
                                                                    <xf:output value="@count"/>
                                                                    <xf:output value="."/>
                                                                    <xf:group ref=".[@codedval!='']"> (<xf:output value="@codedval"/>)</xf:group>
                                                                </h:span>
                                                            </xf:label>
                                                            <xf:action ev:event="DOMActivate">
                                                                <!-- put a copy in the temp instance and turn it into a reference before putting it in place -->
                                                                <xf:delete context="instance('temp')/element" nodeset="*"/>
                                                                <xf:insert context="instance('temp')/element" nodeset="m:perfRes" origin="$thisTopLevelPerformer"/>
                                                                <!-- Insert n attribute if missing -->
                                                                <xf:insert context="instance('temp')/element/*[1]" nodeset="m:perfRes[not(@n)]" 
                                                                    origin="xxf:attribute('n','')"/>
                                                                <xf:setvalue ref="instance('temp')/element/*[1]/@n" value="instance('temp')/element/*[1]/@xml:id"/>
                                                                <!--<xf:delete context="instance('temp')/element/*[1]" nodeset="*|text()|@*[name()!='n' and name()!='xml:id']"/>-->
                                                                <xf:setvalue ref="instance('temp')/element//@xml:id" value="concat(name(..),'_',substring(digest(string(random(true)), 'MD5', 'hex'),1,8))"/>
                                                                <xf:var name="insertPoint" select="count(instance('temp')/element/m:perfRes/m:head)"/>
                                                                <xf:insert context="$thisEnsemble" nodeset="*" 
                                                                    origin="instance('temp')/element/m:perfRes" at="$insertPoint" position="after"/>
                                                                <!-- move the new element into place according to the top level instrumentation -->
                                                                <!-- keep moving down until the order fits the model or reaching the end -->
                                                                <xf:action while="$thisTopLevelPerformer/preceding-sibling::m:perfRes/@xml:id[.!=$perfId][.=$thisEnsemble/m:perfRes[@n[.=$perfId]]/following-sibling::m:perfRes/@n]
                                                                    and count($thisEnsemble/m:perfRes[@n=$perfId]/preceding-sibling::*)+1 &lt; count($thisEnsemble/*)">
                                                                    <xf:var name="pos" select="count($thisEnsemble/m:perfRes[@n=$perfId]/preceding-sibling::*)+1"/>
                                                                    <xf:insert context="$thisEnsemble" origin="$thisEnsemble/*[$pos]"
                                                                        nodeset="*" at="$pos+1"/>
                                                                    <xf:delete context="$thisEnsemble" nodeset="*" at="$pos"/>
                                                                </xf:action>                                                    
                                                                <!-- end moving -->
                                                                <xf:dispatch name="xforms-value-changed" target="form-group"/>
                                                            </xf:action>
                                                        </xf:trigger>
                                                    </xf:group>
                                                </h:div>
                                            </xf:repeat>

                                            <!-- performers not referring to top-level performers (+warning) -->
                                            <xf:repeat nodeset="$thisEnsemble/m:perfRes[not(@n) or (@n and count(.[@n=$topLevelEnsemble/m:perfRes/@xml:id])=0)]">
                                                <xf:var name="thisPerformer" select="."/>
                                                <xf:var name="perfId" select="@xml:id"/>
                                                <h:div>
                                                    <h:a class="help_plain"><h:img src="{instance('parameters')/dcm:server_name}/editor/images/warning.png" alt="warning" 
                                                        style="vertical-align:inherit;" title=""/><h:span
                                                        class="comment">This performer does not seem to correspond to a performer defined at top level. <h:br/>
                                                        You may safely ignore this warning if you do not want instrumentation at this level to be a subset of the instrumentation
                                                        defined at top level.</h:span></h:a> 
                                                    <xf:trigger appearance="minimal">
                                                        <xf:label><h:img src="{instance('parameters')/dcm:server_name}/editor/images/yes.png" alt="yes" title="Click to remove this performer"/>
                                                        </xf:label>
                                                        <xf:action ev:event="DOMActivate">
                                                            <xf:delete nodeset="."/>
                                                            <xf:dispatch name="xforms-value-changed" target="form-group"/>
                                                        </xf:action>
                                                    </xf:trigger>
                                                    <xi:include href="includes/instrvoice-input.xml" parse="xml"/>
                                                </h:div>
                                            </xf:repeat>
                                        </xf:group>                                            
                                        <!-- end performers in ensemble -->
                                    </h:fieldset>
                                </xf:repeat>
                                
                                
                                <!-- list ensembles not linked to top-level ensembles  -->
                                <xf:repeat nodeset="m:perfResList[count(.[@n=$topLevelInstrumentation/m:perfResList/@xml:id])=0]">
                                    <xf:var name="thisId" select="@xml:id"/>
                                    <h:fieldset>
                                        <h:legend>
                                            <h:a class="help_plain"><h:img src="{instance('parameters')/dcm:server_name}/editor/images/warning.png" alt="warning" 
                                                style="vertical-align:inherit;" title=""/><h:span
                                                class="comment">This ensemble does not seem to correspond to an ensemble defined at top level. <h:br/>
                                                You may safely ignore this warning if you do not want instrumentation at this level to be a subset of the instrumentation
                                                defined at top level.</h:span></h:a> 
                                            <xf:trigger appearance="minimal">
                                                <xf:label><h:img src="{instance('parameters')/dcm:server_name}/editor/images/yes.png" alt="yes" title="Click to remove this ensemble"/></xf:label>
                                                <xf:action ev:event="DOMActivate">
                                                    <xf:delete nodeset="."/>
                                                </xf:action>
                                            </xf:trigger>
                                            <xf:input ref="m:head" class="long"/>                                                                
                                            <dcm:attribute-editor ref="m:head"/>
                                            <xf:select1 ref="@codedval" class="long">
                                                <xf:label>Standard code <h:a class="help">&#160;?<h:span 
                                                    class="comment">Choosing a standard MARC code optimizes data  
                                                    compatibility and interchangeability with other systems. <h:br/>
                                                    A code should be supplied also when you do not want the ensemble 
                                                    to have a heading (name).
                                                </h:span></h:a></xf:label>
                                                <xf:itemset nodeset="instance('ensembles')/m:perfResList">
                                                    <xf:label><xf:output value="if (@codedval!='') then concat(@codedval, ' (',m:head,')') else '- Please select -'"/></xf:label>
                                                    <xf:value ref="@codedval"/>
                                                </xf:itemset>
                                                <xf:action ev:event="xforms-value-changed">
                                                    <xf:var name="ensemble" select="."></xf:var>
                                                    <xf:action if="../m:head=''">
                                                        <!-- set ensemble name if empty -->
                                                        <xf:setvalue ref="../m:head" value="instance('ensembles')/m:perfResList[@codedval=$ensemble]"/>
                                                    </xf:action>
                                                </xf:action>
                                            </xf:select1>
                                            <dcm:attribute-editor ref="."/>
                                        </h:legend>
                                        <h:div class="vertical_spacer"/>
                                        
                                    </h:fieldset>
                                </xf:repeat>
                                <!-- end ensembles -->

                                <h:div class="vertical_spacer"/>
                                
                                <!-- select (solo) performers -->
                                <!-- list performers defined at top level -->
                                <xf:repeat nodeset="$topLevelInstrumentation/m:perfRes[//text()]">
                                    <xf:group ref=".[count(preceding-sibling::m:perfRes)=0]">
                                        <h:span class="blocklabel">Performers</h:span>
                                    </xf:group>
                                    <xf:var name="thisTopLevelPerformer" select="."/>
                                    <xf:var name="perfId" select="@xml:id"/>
                                    <h:div>
                                        <xf:group ref=".[@xml:id=$thisInstrumentation/m:perfRes/@n]">
                                            <xf:trigger appearance="minimal">
                                                <xf:label><h:img src="{instance('parameters')/dcm:server_name}/editor/images/yes.png" alt="yes" title="Click to remove this performer"/></xf:label>
                                                <xf:action ev:event="DOMActivate">
                                                    <xf:delete context="$thisInstrumentation" nodeset="m:perfRes[@n=$thisTopLevelPerformer/@xml:id]"/>
                                                </xf:action>
                                            </xf:trigger>
                                            <xf:group ref="$thisInstrumentation/m:perfRes[@n=$perfId]">
                                                <xi:include href="includes/instrvoice-input.xml" parse="xml"/>
                                            </xf:group>
                                        </xf:group>
                                        <xf:group ref=".[not(@xml:id=$thisInstrumentation/m:perfRes/@n)]">
                                            <xf:trigger appearance="minimal">
                                                <xf:label><h:img src="{instance('parameters')/dcm:server_name}/editor/images/no.png" alt="no" title="Click to add this performer"/>
                                                    <h:span class="disabled">
                                                        <xf:output value="@count"/>
                                                        <xf:output value="."/>
                                                        <xf:group ref=".[@codedval!='']"> (<xf:output value="@codedval"/>)</xf:group>
                                                    </h:span>
                                                </xf:label>
                                                <xf:action ev:event="DOMActivate">
                                                    <!-- put a copy in the temp instance and generate new @id before putting it in place -->
                                                    <xf:delete context="instance('temp')/element" nodeset="*"/>
                                                    <xf:insert context="instance('temp')/element" nodeset="m:perfRes" origin="$thisTopLevelPerformer"/>
                                                    <xf:setvalue ref="instance('temp')/element/*[1]/@n" value="instance('temp')/element/*[1]/@xml:id"/>
                                                    <!--<xf:delete context="instance('temp')/element/*[1]" nodeset="*|text()|@*[name()!='n' and name()!='xml:id']"/>-->
                                                    <xf:setvalue ref="instance('temp')/element//@xml:id" value="concat(name(..),'_',substring(digest(string(random(true)), 'MD5', 'hex'),1,8))"/>
                                                    <xf:var name="insertPoint" select="count(instance('temp')/element/m:perfRes/m:head)"/>
                                                    <xf:insert context="$thisInstrumentation" nodeset="*" 
                                                        origin="instance('temp')/element/m:perfRes" at="$insertPoint" position="after"/>
                                                    <!-- move the new element into place according to the top level instrumentation -->
                                                    <!-- keep moving down until the order fits the model or reaching the end -->
                                                    <xf:action while="$thisTopLevelPerformer/preceding-sibling::m:perfRes/@xml:id[.!=$perfId][.=$thisInstrumentation/m:perfRes[@n[.=$perfId]]/following-sibling::m:perfRes/@n]
                                                        and count($thisInstrumentation/m:perfRes[@n=$perfId]/preceding-sibling::*)+1 &lt; count($thisInstrumentation/*)">
                                                        <xf:var name="pos" select="count($thisInstrumentation/m:perfRes[@n=$perfId]/preceding-sibling::*)+1"/>
                                                        <xf:insert context="$thisInstrumentation" origin="$thisInstrumentation/*[$pos]"
                                                            nodeset="*" at="$pos+1"/>
                                                        <xf:delete context="$thisInstrumentation" nodeset="*" at="$pos"/>
                                                    </xf:action>                                                    
                                                    <!-- end moving -->
                                                </xf:action>
                                            </xf:trigger>
                                        </xf:group>
                                    </h:div>
                                </xf:repeat>

                                <!-- list performers not linked to top-level performers  -->
                                <xf:repeat nodeset="m:perfRes[count(.[@n=$topLevelInstrumentation/m:perfRes/@xml:id])=0][//text()]">
                                    <xf:var name="thisId" select="@xml:id"/>
                                    <h:div>
                                        <h:a class="help_plain"><h:img src="{instance('parameters')/dcm:server_name}/editor/images/warning.png" alt="warning" 
                                            style="vertical-align:inherit;" title=""/><h:span
                                        class="comment">This performer does not seem to correspond to a performer defined at top level. <h:br/>
                                        You may safely ignore this warning if you do not want instrumentation at this level to be a subset of the instrumentation
                                        defined at top level.</h:span></h:a> 
                                        <xf:trigger appearance="minimal">
                                            <xf:label><h:img src="{instance('parameters')/dcm:server_name}/editor/images/yes.png" alt="yes" title="Click to remove this performer"/></xf:label>
                                            <xf:action ev:event="DOMActivate">
                                                <xf:delete nodeset="."/>
                                            </xf:action>
                                        </xf:trigger>
                                        <xi:include href="includes/instrvoice-input.xml" parse="xml"/>
                                    </h:div>
                                </xf:repeat>
                                 
                            </xf:group>
                            <!-- end select performers -->
                            
                        </h:fieldset>
                    </xf:group>
                    <!-- end instrumentation selection -->
                    
                    
                    <!--  cast selection -->
                    <xf:var name="topLevelCastList" select="ancestor-or-self::m:expression[local-name(../..)='work']/m:perfMedium/m:castList"/>
                    <xf:group ref=".[$topLevelCastList[*]]" class="instr_subselection">
                        <h:fieldset>
                            <h:legend>Roles (characters) selection <h:a class="help">&#160;?<h:span 
                                class="comment">A sub-selection of the roles defined at version level may 
                                be specified here.
                            </h:span></h:a></h:legend>
                            <xf:var name="thisCastList" select="m:perfMedium/m:castList"/>
                            <dcm:create nodeset="m:perfMedium"
                                label="Roles"
                                origin="instance('empty-instance')/m:meiHead/m:workList/m:work/m:expressionList/m:expression/m:componentList/m:expression/m:perfMedium"/>
                            <dcm:create ref="m:perfMedium" 
                                nodeset="m:castList"
                                label="Roles"
                                origin="instance('empty-instance')/m:meiHead/m:workList/m:work/m:expressionList/m:expression/m:componentList/m:expression/m:perfMedium/m:castList"/>
                            <xf:group ref="$thisCastList">
                                <xf:repeat nodeset="$topLevelCastList/m:castItem">
                                    <xf:var name="thisTopLevelCast" select="."/>
                                    <xf:var name="castId" select="@xml:id"/>
                                    <h:div>
                                        <xf:group ref=".[@xml:id=$thisCastList/m:castItem/@n]">
                                            <xf:trigger appearance="minimal">
                                                <xf:label><h:img src="{instance('parameters')/dcm:server_name}/editor/images/yes.png" alt="yes" title="Click to remove this role"/>
                                                    <!-- Roles cannot be edited at this level - only added or omitted -->
                                                    <h:span>
                                                        <xf:output value="m:role//text()[1]"/>
                                                    </h:span>
                                                </xf:label>
                                                <xf:action ev:event="DOMActivate">
                                                    <xf:delete context="$thisCastList" nodeset="m:castItem[@n=$thisTopLevelCast/@xml:id]"/>
                                                </xf:action>
                                            </xf:trigger>
                                        </xf:group>
                                        <xf:group ref=".[not(@xml:id=$thisCastList/m:castItem/@n)]">
                                            <xf:trigger appearance="minimal">
                                                <xf:label><h:img src="{instance('parameters')/dcm:server_name}/editor/images/no.png" alt="no" title="Click to add this role"/>
                                                    <h:span class="disabled">
                                                        <xf:output value="m:role//text()[1]"/>
                                                    </h:span>
                                                </xf:label>
                                                <xf:action ev:event="DOMActivate">
                                                    <!-- put a copy in the temp instance and generate new @id before putting it in place -->
                                                    <xf:delete context="instance('temp')/element" nodeset="*"/>
                                                    <xf:insert context="instance('temp')/element" nodeset="m:castItem" origin="$thisTopLevelCast"/>
                                                    <xf:setvalue ref="instance('temp')/element/*[1]/@n" value="instance('temp')/element/*[1]/@xml:id"/>
                                                    <!--<xf:delete context="instance('temp')/element/*[1]" nodeset="*|@*[name()!='n' and name()!='xml:id']"/>-->
                                                    <xf:action xxf:iterate="instance('temp')/element//*[@xml:id]">
                                                        <xf:setvalue ref="@xml:id" value="concat(name(..),'_',substring(digest(string(random(true)), 'MD5', 'hex'),1,8))"/>
                                                    </xf:action>
                                                    <xf:insert context="$thisCastList" nodeset="*" 
                                                        origin="instance('temp')/element/m:castItem" at="1" position="before"/>
                                                    <!-- move the new element into place according to the top level instrumentation -->
                                                    <!-- keep moving down until the order fits the model or reaching the end -->
                                                    <xf:action while="$thisTopLevelCast/preceding-sibling::m:castItem/@xml:id[.!=$castId][.=$thisCastList/m:castItem[@n[.=$castId]]/following-sibling::m:castItem/@n]
                                                        and count($thisCastList/m:castItem[@n=$castId]/preceding-sibling::*)+1 &lt; count($thisCastList/*)">
                                                        <xf:var name="pos" select="count($thisCastList/m:castItem[@n=$castId]/preceding-sibling::*)+1"/>
                                                        <xf:insert context="$thisCastList" origin="$thisCastList/*[$pos]"
                                                            nodeset="*" at="$pos+1"/>
                                                        <xf:delete context="$thisCastList" nodeset="*" at="$pos"/>
                                                    </xf:action>                                                    
                                                    <!-- end moving -->
                                                </xf:action>
                                            </xf:trigger>
                                        </xf:group>
                                    </h:div>
                                </xf:repeat>
                                <!-- list non-empty castItems not linked to top-level castList -->
                                <xf:repeat nodeset="$thisCastList/m:castItem[count(.[@n=$topLevelCastList/m:castItem/@xml:id])=0][*]">
                                    <h:div>
                                        <h:a class="help_plain"><h:img src="{instance('parameters')/dcm:server_name}/editor/images/warning.png" alt="warning" 
                                            style="vertical-align:inherit;" title=""/><h:span
                                            class="comment">This role does not seem to correspond to a role defined at top level. <h:br/>
                                            You may safely ignore this warning if you do not want the cast list at this level to be a subset of the cast list
                                            defined at top level.</h:span></h:a> 
                                        <xf:trigger appearance="minimal">
                                            <xf:label><h:img src="{instance('parameters')/dcm:server_name}/editor/images/yes.png" alt="yes" title="Click to remove this role"/>
                                                <h:span>
                                                    <xf:output value="m:role//text()[1]"/>
                                                </h:span>
                                            </xf:label>
                                            <xf:action ev:event="DOMActivate">
                                                <xf:delete nodeset="."/>
                                            </xf:action>
                                        </xf:trigger>
                                    </h:div>
                                </xf:repeat>
                            </xf:group>
                        </h:fieldset>
                    </xf:group>
                    <!-- end cast selection -->
                   
                   
                    <h:fieldset>
                        <h:legend>Notes <h:a class="help">&#160;?<h:span class="comment">Any descriptional or other notes about this component</h:span></h:a></h:legend>
                        <h:div class="vertical_spacer"/>
                        <dcm:create 
                            nodeset="m:notesStmt"
                            label="Add annotation"
                            origin="instance('empty-instance')/m:meiHead/m:workList/m:work/m:expressionList/m:expression/m:notesStmt"/>
                        <xf:group ref="m:notesStmt">
                            <dcm:create 
                                nodeset="m:annot"
                                label="Add annotation"
                                origin="instance('empty-instance')/m:meiHead/m:workList/m:work/m:expressionList/m:expression/m:notesStmt/m:annot"/>
                            <xf:repeat nodeset="m:annot" id="repeat_expression_note">
                                <h:div style="white-space:nowrap">
                                    <fr:tinymce ref="."/>										
                                    <dcm:element-buttons triggers="remove" 
                                        index="repeat_expression_note" 
                                        nodeset="m:annot" 
                                        origin="instance('empty-instance')/m:meiHead/m:workList/m:work/m:expressionList/m:expression/m:notesStmt/m:annot"/>
                                    <dcm:attribute-editor ref="."/>
                                </h:div>
                            </xf:repeat>
                        </xf:group>                        
                    </h:fieldset>

                    
                    <!-- Relations -->
                    <h:fieldset>
                        <h:legend>Relations <h:a class="help">&#160;?<h:span class="comment">Relations between this component and 
                            other components or files may be specified here to create links between them.<h:br/>
                            For instance, if this component is an arrangement of another piece it may be specified here
                            by selecting the "is arrangement of". <h:br/>
                            On the target of the relation, you may want to add a link pointing to this one and defining 
                            the relation as "has arrangement" to make the linking bidirectional.<h:br/>
                            The relation can also point to an external ressource such as an edition or digitization. 
                            In that case select the "has reproduction" relation.
                        </h:span></h:a></h:legend>
                        <dcm:create 
                            nodeset="m:relationList"
                            label="Add relation"
                            origin="instance('empty-instance')/m:meiHead/m:workList/m:work/m:expressionList/m:expression/m:relationList"/>
                        <dcm:create ref="m:relationList" 
                            nodeset="m:relation"
                            label="Add relation"
                            origin="instance('empty-instance')/m:meiHead/m:workList/m:work/m:expressionList/m:expression/m:relationList/m:relation"/>                        
                        <h:table class="element_list" cellspacing="0" cellpadding="0" border="0">
                            <xf:repeat nodeset="m:relationList/m:relation" id="component_relations">
                                <xf:var name="context_node" select="."/>
                                <h:tr>
                                    <h:td>
                                        <h:span>This piece </h:span>
                                        <xi:include href="includes/relation_select.xml" parse="xml"/>
                                        <xf:group ref="@target">
                                            <xf:input ref="." class="maxlong">
                                                <xf:label>URI <h:a class="help">&#160;?<h:span class="comment">The location of the linked ressource (target). 
                                                    The target may be either an external file (such as "http://www.example.org/some_file.xml"), an internal 
                                                    reference to an element in the file you are editing (by XML ID, such as "#expression_1"), or a combination
                                                    of both (like "http://www.example.org/some_file.xml#expression_1").<h:br/>
                                                    Please note: in MerMEId's HTML preview, relative URIs are interpreted as being links to other 
                                                    MEI files to be displayed as MerMEId previews as well. To avoid this, make the URI absolute 
                                                    (i.e., starting with a protocol like "http://"). <!--<h:br/>
                                                    The target URI may be entered manually or selected using the "Select file" button.--></h:span></h:a>
                                                </xf:label>
                                            </xf:input>
                                            <!-- the file browser does not (yet) work at this level -->
                                            <xf:trigger>
                                                <xf:label>Select file...</xf:label>
                                                <xf:action ev:event="DOMActivate">
                                                    <xf:setvalue ref="instance('temp')/nodeset" 
                                                        value='"instance(&apos;data-instance&apos;)/m:meiHead/m:workList/m:work//m:expression[@xml:id=instance(&apos;temp&apos;)/id]/m:relationList/m:relation[index(&apos;component_relations&apos;)]"'/>
                                                    <xxf:show dialog="relation_dialog"/>
                                                    <xf:setvalue ref="instance('temp')/target_uri" value="concat(instance('parameters')/dcm:server_name,'/modules/cross-link.xq?get=works')"/>
                                                    <xf:send submission="load-fileList"/>
                                                </xf:action>
                                            </xf:trigger>
                                            <xf:trigger appearance="minimal">
                                                <xf:label><h:span style="vertical-align:bottom;"><h:img src="{instance('parameters')/dcm:server_name}/editor/images/go_to_link.png" 
                                                    title="Go to linked resource"/></h:span></xf:label>
                                                <xf:action ev:event="DOMActivate">
                                                    <xf:var name="uri" 
                                                        select="concat(
                                                        instance('parameters')/dcm:orbeon_dir,
                                                        '?uri=',
                                                        instance('parameters')/dcm:form_home,
                                                        'edit-work-case.xml&amp;doc=',.)"/>
                                                    <xf:setvalue ref="instance('temp')/target_uri" value="$uri"/>
                                                    <xxf:show dialog="leave-warning-dialog"></xxf:show>
                                                </xf:action>
                                            </xf:trigger>
                                        </xf:group>
                                    </h:td>
                                    <h:td>
                                        <xf:input ref="@label" class="long">
                                            <xf:label> Label <h:a class="help">&#160;?<h:span class="comment">The text to be 
                                                displayed as the link text (usually the title of the linked item).<h:br/>
                                                Please note that MerMEId displays labels containing a colon (:) in a special way:
                                                In that case, the text before the colon is displayed as the label before the link
                                                instead of the standard description af the relation.</h:span></h:a></xf:label>
                                        </xf:input>
                                    </h:td>
                                    <h:td style="vertical-align:top; white-space:nowrap;">
                                        <h:span class="editmenu">
                                            <dcm:element-buttons 
                                                triggers="up down add del-parent-with-last" 
                                                nodeset="m:relation" 
                                                index="component_relations"
                                                origin="instance('empty-instance')/m:meiHead/m:workList/m:work/m:relationList/m:relation"/>
                                            <dcm:attribute-editor ref="."/>
                                        </h:span>
                                    </h:td>
                                </h:tr>
                            </xf:repeat>
                        </h:table>
                    </h:fieldset>
                    
                    
                </xf:group>
                
                <xf:group ref=".[not(instance('data-instance')//m:expression[@xml:id=instance('temp')/id])]">
                    <h:h3>Item not found</h:h3>
                    <h:p>Did you remember to save your work before you opened the details editor?</h:p>
                    <h:p>Please click the "Discard" button to return to the list.</h:p>
                </xf:group>
                
                
            </xf:group>
            
            <h:br clear="all"/>   
            
        </h:div>
        
        <xi:include href="edit-form-footer.xml" parse="xml"/>
        <xi:include href="includes/relation-dialog.xml" parse="xml"/>
        <xi:include href="includes/code-inspector.xml" parse="xml"/>
        
    </h:body>
</h:html>
