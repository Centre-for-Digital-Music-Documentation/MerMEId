<?xml version="1.0" encoding="UTF-8"?>
<h:div xmlns:h="http://www.w3.org/1999/xhtml" 
	xmlns:xf="http://www.w3.org/2002/xforms" 
	xmlns:xxf="http://orbeon.org/oxf/xml/xforms"
	xmlns:xi="http://www.w3.org/2001/XInclude" 
	xmlns:dcm="http://www.kb.dk/dcm"
	xmlns:ev="http://www.w3.org/2001/xml-events"
	id="music-div">
	
	<xf:group ref="instance('data-instance')/m:meiHead/m:workDesc/m:work/m:expressionList">
		<h:div class="inputdiv">
			
			<xf:repeat nodeset="m:expression" id="repeat-expression">
				<h:fieldset>
					<h:legend>Version
						<dcm:id/>
						<h:a class="help">?<h:span class="comment">Information at version level.<h:br/> 
							To create a new version, click the "add" or "copy" buttons on the right.<h:br/>
							To indicate the individual pieces (movements, acts or any other subdivision) in this work 
							or version, use "Components" below.<h:br/>
							In FRBR terms, versions and components correspond to the "expression" level.</h:span></h:a>
						<dcm:element-buttons 
							triggers="all" 
							nodeset="m:expression" 
							index="repeat-expression"
							origin="instance('reduced-template')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression[1]"/>
						<dcm:attribute-editor ref="."/>
					</h:legend>
					
					<xxf:variable name="num_ex" as="string" select="count(../m:expression)"/>
					<xxf:variable name="binding" select="."/>
					
					<!-- display expression-specific details at top level only if more than one expression or not empty -->
					<xf:group ref=".[number($num_ex)&gt;1 or m:titleStmt/m:title[normalize-space(.)!='']]">
						<h:div class="blocklabel" style="margin-top:10px">
							Version title
							<h:a class="help">?<h:span class="comment">E.g. "Version for piano" or 
								"Discarded version". Enter a version title only if you 
								want to distinguish different versions of the work. 
								Otherwise leave empty.</h:span></h:a>
						</h:div>
						<xf:group ref="m:titleStmt">
							<xf:repeat nodeset="m:title" id="repeat-version-titles" class="input_group">
								<h:div>
									<xf:group ref=".[number($num_ex)=1 and .!='']">
										<h:a class="help_plain"><h:img src="http:/editor/images/warning.png" 
											alt="warning"/><h:span class="comment">
												When only one version is given, 
												no title should be entered at this level. <h:br/>
												If no alternative versions are added, please indicate the 
												title at work level (i.e., the "Work" tab) instead.
											</h:span></h:a>
									</xf:group>
									<xi:include href="includes/input_with_xmllang.xml" parse="xml"/>
									<xf:group ref=".[count(../m:title)&gt;1]">
										<dcm:element-buttons 
											triggers="all" 
											nodeset="m:title" 
											index="repeat-version-titles"
											origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression[1]/m:titleStmt/m:title"/>
									</xf:group>										
									<xf:group ref=".[count(../m:title)=1]">
										<dcm:element-buttons 
											triggers="up down copy add" 
											nodeset="m:title" 
											index="repeat-version-titles"
											origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression[1]/m:titleStmt/m:title"/>
										<xf:trigger appearance="minimal" class="non-standard_button">
											<xf:label><img src="http:/editor/images/remove.gif" alt="Delete row"/></xf:label>
											<xf:action ev:event="DOMActivate">
												<xf:setvalue ref="." value="''"/>
											</xf:action>
										</xf:trigger>
									</xf:group>
									<dcm:attribute-editor ref="."/>
								</h:div>
							</xf:repeat>
						</xf:group>
					</xf:group>
					
					<h:fieldset>
						<h:legend>Music metadata
							<h:a class="help">?<h:span class="comment">Use at this level only with single-movement works, 
								or to specify the main key of a work or version.  
							</h:span></h:a>
						</h:legend>
						
						<h:div>     
							<dcm:create 
								nodeset="m:tempo"
								label="Add tempo"
								origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression[1]/m:tempo"/>
							<xf:input ref="m:tempo" class="maxlong">
								<xf:label class="fixed_width_short">Tempo</xf:label>
							</xf:input>
							<xf:trigger appearance="minimal" ref="m:tempo">
								<xf:label><h:img src="http:/editor/images/remove.gif" alt="Delete" title="Delete row"/></xf:label>
								<xf:action ev:event="DOMActivate">
									<xf:delete nodeset="."/>
								</xf:action>
							</xf:trigger>
							<dcm:attribute-editor ref="m:tempo"/>
							<h:br clear="all"/>  
							<dcm:create 
								nodeset="m:meter"
								label="Add metre"
								origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression[1]/m:meter"/>
							<xf:group ref="m:meter">
								<xf:input ref="@count" class="minimal_length">
									<xf:label class="fixed_width_short">Metre</xf:label>
								</xf:input>/ <xf:input ref="@unit" class="minimal_length"/> or symbol: 
								<xf:select1	ref="@sym" class="auto_length">
									<xf:item>
										<xf:label>-</xf:label>
										<xf:value/>
									</xf:item>
									<xf:item>
										<xf:label>common time</xf:label>
										<xf:value>common</xf:value>
									</xf:item>
									<xf:item>
										<xf:label>cut time</xf:label>
										<xf:value>cut</xf:value>
									</xf:item>
								</xf:select1>
								<xf:trigger appearance="minimal">
									<xf:label><h:img src="http:/editor/images/remove.gif" alt="Delete" title="Delete row"/></xf:label>
									<xf:action ev:event="DOMActivate">
										<xf:delete nodeset="."/>
									</xf:action>
								</xf:trigger>
								<dcm:attribute-editor/>
							</xf:group>
							<h:br clear="all"/>
							<dcm:create 
								nodeset="m:key"
								label="Add main key"
								origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression[1]/m:key"/>
							<xf:group ref="m:key">
								<h:span class="fixed_width_short">Key</h:span>
								<xi:include href="includes/key_select.xml" parse="xml"/>
								<xf:trigger appearance="minimal">
									<xf:label><h:img src="http:/editor/images/remove.gif" alt="Delete" title="Delete row"/></xf:label>
									<xf:action ev:event="DOMActivate">
										<xf:delete nodeset="."/>
									</xf:action>
								</xf:trigger>
								<dcm:attribute-editor/>
							</xf:group>
						</h:div>   
						
						<h:span class="blocklabel strong">Incipits <h:a class="help">?<h:span class="comment">Both 
							music and text incipits may be added. Music incipits can be added as links to graphic files
							or entered using an encoding such as <em>Plaine &amp; Easie Code</em>.
						</h:span></h:a></h:span>
						<dcm:create nodeset="m:incip"
							label="Add incipits"
							origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression[1]/m:incip"/>                        
						<dcm:create ref="m:incip"
							nodeset="m:graphic"
							label="Add link to graphics"
							origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression[1]/m:incip/m:graphic[1]"/>                        
						<xf:group ref=".[m:incip/m:graphic]">
							<h:span class="blocklabel">Music incipit graphics</h:span>
							<h:span class="blocklabel">URI <h:a class="help">?<h:span class="comment">Location of a graphics file, e.g.
								"http://example.com/incipits/lowres/116.png"</h:span></h:a></h:span>
						</xf:group>
						<xf:repeat nodeset="m:incip/m:graphic" id="incipit-repeat">
							<h:div>
								<xf:input ref="@target" class="maxlong">
									<xf:label/>
								</xf:input>
								<xf:select1 ref="@targettype" class="auto_length">
									<xf:item>
										<xf:value>lowres</xf:value>
										<xf:label>Low resolution</xf:label>
									</xf:item>
									<xf:item>
										<xf:value>hires</xf:value>
										<xf:label>High resolution</xf:label>
									</xf:item>
									<xf:item>
										<xf:value>print</xf:value>
										<xf:label>Print quality</xf:label>
									</xf:item>
								</xf:select1>
								<h:a class="help">?<h:span class="comment">Choose "Low resolution" for standard web graphics, "High resolution" for high quality
									web graphics, or "Print quality" for print quality graphics</h:span></h:a>
								<dcm:element-buttons
									triggers="add remove" 
									nodeset="m:graphic" 
									index="incipit-repeat"
									origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression[1]/m:incip/m:graphic[1]"/>
								<dcm:attribute-editor/>
							</h:div>
						</xf:repeat>
						
						<h:div>
							<dcm:create ref="m:incip"
								nodeset="m:incipCode"
								label="Add music incipit code"
								origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression[1]/m:incip/m:incipCode"/>
						</h:div>
						<xf:group ref=".[m:incip/m:incipCode]">
							<h:span class="blocklabel">Music incipit code <h:a class="help">?<h:span 
								class="comment">One-line incipit encoding, using e.g. <em>Plaine &amp; Easie Code</em></h:span></h:a></h:span>
							<xf:repeat nodeset="m:incip/m:incipCode" id="incipcode-repeat">
								<xf:input ref="@analog">
									<xf:label>Code language <h:a class="help">?<h:span class="comment">The name of the encoding language used, 
										e.g. "Plaine &amp; Easie Code"</h:span></h:a></xf:label>
								</xf:input>
								<xf:input ref="." class="maxlong">
									<xf:label> Code <h:a class="help">?<h:span class="comment">The incipit as expressed in the indicated encoding language</h:span></h:a></xf:label>
								</xf:input>
								<dcm:element-buttons
									triggers="add remove" 
									nodeset="m:incipCode" 
									index="incipcode-repeat"
									origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression[1]/m:incip/m:incipCode"/>
								<dcm:attribute-editor/>
							</xf:repeat>
						</xf:group>
						<h:div>
							<dcm:create ref="m:incip"
								nodeset="m:incipText"
								label="Add text incipit"
								origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression[1]/m:incip/m:incipText"/>                        
							<dcm:create ref="m:incip/m:incipText"
								nodeset="m:p"
								label="Add text incipit"
								origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression[1]/m:incip/m:incipText/m:p"/>
						</h:div>
						<xf:group ref=".[m:incip/m:incipText/m:p]">
							<h:span class="blocklabel">Text incipit
								<!--<h:a class="help_plain"><h:img src="http:/editor/images/html_markup.gif" alt="HTML markup allowed"/><h:span class="comment">HTML markup and special characters allowed</h:span></h:a>-->
							</h:span>
							<xf:repeat nodeset="m:incip/m:incipText/m:p" id="text-incipit-repeat" class="input_group">
								<xf:input ref="." class="maxlong"><xf:label/></xf:input> 
								<xf:select1 ref="@xml:lang" xxf:refresh-items="false">
									<xf:label/>
									<xf:itemset nodeset="instance('languages')/language">
										<xf:label><xf:output value="."/></xf:label>
										<xf:value ref="@xml:id"></xf:value>
									</xf:itemset>
								</xf:select1>                                
								<dcm:element-buttons
									triggers="add remove" 
									nodeset="m:p" 
									index="text-incipit-repeat"
									origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression[1]/m:incip/m:incipText/m:p"/>
								<dcm:attribute-editor/>
								<h:br/>
							</xf:repeat>
						</xf:group>
					</h:fieldset>
					
					<xf:group ref="m:titleStmt">
						<h:div class="blocklabel">Persons <h:a class="help">?<h:span 
							class="comment">Persons with connection to this particular version
							only, e.g. an arranger, or a text author in a collection of songs 
							with different authors</h:span></h:a></h:div>	
						<xf:repeat nodeset="m:respStmt/m:persName" id="version-relators-repeat">
							<xf:group ref=".[position()=1]">
								<h:div class="blocklabel">
									<h:span class="fixed_width_long">Name</h:span>
									<h:span> Relation <h:a class="help">?<h:span class="comment">Specifies the person's relation to the item, e.g. "Arranger"
										or "Author". The list is based on MARC relators as defined at http://id.loc.gov/vocabulary/relators</h:span></h:a>
									</h:span>
								</h:div>
							</xf:group>
							<dcm:relator ref="."/>
							<dcm:element-buttons 
								triggers="add del-parent-with-last" 
								nodeset="m:persName" 
								index="version-relators-repeat"
								origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression[1]/m:titleStmt/m:respStmt/m:persName[1]"/>
							<dcm:attribute-editor ref="."/>
							<h:br/>
						</xf:repeat>
						<dcm:create 
							nodeset="m:respStmt"
							label="Add person"
							origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression[1]/m:titleStmt/m:respStmt"/>
						<dcm:create ref="m:respStmt"
							nodeset="m:persName"
							label="Add person"
							origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression[1]/m:titleStmt/m:respStmt/m:persName[1]"/>
					</xf:group>
					
					<h:span class="blocklabel">Edited score</h:span>
					<dcm:create  
						nodeset="m:relationList"
						label="Add link to edited score"
						origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression[1]/m:relationList"/>
					<dcm:create ref="m:relationList" 
						nodeset="m:relation[@rel='hasReproduction' and @targettype='edited_score']"
						label="Add link to edited score"
						origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression[1]/m:relationList/m:relation[@rel='hasReproduction' and @targettype='edited_score']"/>
					<xf:group ref="m:relationList[m:relation[@rel='hasReproduction' and @targettype='edited_score']]">
						<xf:group ref=".[m:relation[@rel='hasReproduction' and @targettype='edited_score']]">
							<h:span class="blocklabel">URI <h:a class="help">?<h:span class="comment">Location of an external, edited score.
								Not for digital representations of items listed as "sources"</h:span></h:a>
							</h:span>
						</xf:group>
						<xf:repeat nodeset="m:relation[@rel='hasReproduction' and @targettype='edited_score']" id="edited_score-repeat">
							<h:div>
								<xf:input ref="@target" class="long">
									<xf:label/>
								</xf:input>
								<xf:input ref="@label">
									<xf:label>Description <h:a class="help">?<h:span class="comment">Explanatory text for the link to the resource, 
										e.g. "Carl Nielsen Edition, full score"</h:span></h:a></xf:label>
								</xf:input>
								<dcm:element-buttons
									triggers="add remove" 
									nodeset="m:relation" 
									index="edited_score-repeat"
									origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression[1]/m:relationList/m:relation[@rel='hasReproduction' and @targettype='edited_score']"/>
								<dcm:attribute-editor ref="."/>
							</h:div>
						</xf:repeat>
						<h:br/> 
					</xf:group>
					
					<h:fieldset>                                                     
						<h:legend>Instrumentation, singers and characters <h:a class="help">?<h:span 
							class="comment">Instruments and singers may be grouped into ensembles or specified
							as "stand-alone" performers. A group of performers acting as an ensemble (including choirs)
							should be defined as such. Each ensemble may or may not have a name (label) for display, 
							and may or may not list its individual performers.<h:br/>
							Both ensembles and performers should have a MARC standard code added to improve
							data compatibility and interchange. Codes are selected from the dropdown menus.							
						</h:span></h:a>
							<dcm:attribute-editor ref="m:perfMedium"/>
						</h:legend>
						
						<dcm:create  
							nodeset="m:perfMedium"
							label="Add instruments &amp; roles"
							origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression[1]/m:componentGrp/m:expression/m:perfMedium"/>
						
						<xf:group ref="m:perfMedium">
							
							<dcm:create
								nodeset="m:instrumentation"
								label="Add instrumentation"
								origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression[1]/m:componentGrp/m:expression/m:perfMedium/m:instrumentation"/>
							
							
							<!-- dialog for adding ensembles -->
							<xxf:dialog id="ensemble-menu" appearance="full" level="modal"
								close="true" draggable="true" visible="false">
								<xf:label>Ensembles</xf:label>
								<xf:repeat nodeset="instance('instrumentation')/m:instrVoiceGrp[@code]" id="ensemble-menu-repeat">
									<xf:trigger submission="replace-form-with" appearance="minimal">
										<xf:label><h:img src="http:/editor/images/add.gif" alt="Add"/>
											<xf:output ref="if (m:head!='') then m:head else '[empty ensemble]'"/>
										</xf:label>
										<xf:action ev:event="DOMActivate">
											<xf:insert context="$binding/m:perfMedium/m:instrumentation" 
												nodeset="m:instrVoiceGrp"
												at="index('repeat-ensemble')"
												position="after" 
												origin="instance('instrumentation')/m:instrVoiceGrp[@code][index('ensemble-menu-repeat')]"/>
											<!-- generate IDs for added performers -->
											<xf:dispatch name="id-update" target="form-group"/>
											<xxf:hide dialog="ensemble-menu"/>
										</xf:action>
									</xf:trigger>
									<h:br/>
								</xf:repeat>
							</xxf:dialog>			
							
							<xf:group ref="m:instrumentation">
								<h:div class="blocklabel strong">Ensembles </h:div>
								<xf:trigger ref=".[count(m:instrVoiceGrp)=0]" class="create_button">
									<xf:label><img src="http:/editor/images/list.png" alt="Add from list"/> Add ensemble</xf:label>
									<xf:action ev:event="DOMActivate">
										<xxf:show dialog="ensemble-menu"/>
									</xf:action>
								</xf:trigger>
								<xf:repeat nodeset="m:instrVoiceGrp" id="repeat-ensemble">
									<h:fieldset>
										<h:legend>
											<xf:output value="if (m:head!='') then m:head else '[Ensemble]'"/> &#160;
											<dcm:element-buttons 
												triggers="up down" 
												nodeset="m:instrVoiceGrp" 
												origin="instance('instrumentation')/m:instrVoiceGrp[1]"
												index="repeat-ensemble"/><xf:trigger 
													appearance="minimal" class="non-standard_button">
													<xf:label><img src="http:/editor/images/add.gif" alt="Add" title="Add row"/></xf:label>
													<xf:action ev:event="DOMActivate">
														<xxf:show dialog="ensemble-menu"/>
													</xf:action>
												</xf:trigger>
											<xf:trigger appearance="minimal">
												<xf:label><h:img src="http:/editor/images/remove.gif" alt="Delete" title="Delete row"/></xf:label>
												<xf:action ev:event="DOMActivate">
													<xf:delete nodeset="." at="index('repeat-ensemble')"/>
													<!-- remove references to deleted items -->
													<!--<xf:setvalue ref="$binding/m:castList/m:castItem/m:role/m:ref/@target[not(.=$binding//@xml:id)]" value="''"/>-->
												</xf:action>
											</xf:trigger>
											<dcm:attribute-editor ref="."/>
										</h:legend>
										<h:div class="vertical_spacer"/> 
										<h:div>
											<dcm:create 
												nodeset="m:head"
												label="Add ensemble heading"
												origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression[1]/m:perfMedium/m:instrumentation/m:instrVoiceGrp/m:head"/>
											<xf:input ref="m:head" class="long">
												<xf:label class="fixed_width">Heading <h:a class="help">?<h:span 
													class="comment">An optional heading or name wich may be used with or 
													instead of a detailed listing of the instruments in the ensemble. 
													Use it to specify the type of ensemble, e.g. "Orchestra", "String quartet", 
													"Choir", to give a general heading like "Instrumentation" or 
													an orchestration string like "2.2.2.2/4.2.3.1/timp/str".<h:br/> 
													If no heading has been entered, 
													a suggested ensemble name is automatically inserted when choosing
													a standard ensemble code in the last field.
												</h:span></h:a></xf:label>
											</xf:input>
											<xf:select1 ref="@code">
												<xf:label>Standard code <h:a class="help">?<h:span 
													class="comment">Choosing a standard MARC code optimizes data  
													compatibility and interchangeability with other systems. <h:br/>
													A code should be supplied also when you do not want the ensemble 
													to have a heading (name).
												</h:span></h:a></xf:label>
												<xf:itemset nodeset="instance('ensembles')/m:instrVoiceGrp">
													<xf:label><xf:output value="if (@code!='') then concat(@code, ' (',m:head,')') else '- Please select -'"/></xf:label>
													<xf:value ref="@code"/>
												</xf:itemset>
												<xf:action ev:event="xforms-value-changed">
													<xxf:variable name="ensemble" select="."></xxf:variable>
													<xf:action if="../m:head=''">
														<!-- set ensemble name if empty -->
														<xf:setvalue ref="../m:head" value="instance('ensembles')/m:instrVoiceGrp[@code=$ensemble]"/>
													</xf:action>
												</xf:action>
											</xf:select1>
											<dcm:attribute-editor ref="m:head"/>
										</h:div>
										<h:div class="vertical_spacer"/>
										
										<!-- performers within an ensemble -->
										
										<!-- dialog for adding performers to existing ensembles -->
										<xxf:dialog id="ensemble-performer-menu" appearance="full" level="modal"
											close="true" draggable="true" visible="false">
											<xf:label>Performers</xf:label>
											<xf:repeat nodeset="instance('instrumentation')/m:instrVoiceGrp[m:instrVoice]" id="ensemble-performer-menu-repeat">
												<xf:trigger submission="replace-form-with" appearance="minimal">
													<xf:label><h:img src="http:/editor/images/add.gif" alt="Add"/>
														<xf:output ref="if (m:head!='') then m:head else '[single performer]'"/>
													</xf:label>
													<xf:action ev:event="DOMActivate">
														<xf:insert context="$binding/m:perfMedium/m:instrumentation/m:instrVoiceGrp[index('repeat-ensemble')]" 
															nodeset="m:instrVoice"
															at="index('repeat-ensemble-performer')"
															position="after" 
															origin="instance('instrumentation')/m:instrVoiceGrp[m:instrVoice][index('ensemble-performer-menu-repeat')]/m:instrVoice"/>
														<!-- generate IDs for added performers -->
														<xf:dispatch name="id-update" target="form-group"/>
														<xxf:hide dialog="ensemble-performer-menu"/>
													</xf:action>
												</xf:trigger>
												<h:br/>
											</xf:repeat>
										</xxf:dialog>			
										
										<h:div><h:span class="strong">Performers in this ensemble
											<h:a class="help">?<h:span class="comment">Optional. An ensemble may be specified by name (above), 
												by a list of performers, or both.</h:span></h:a></h:span>
										</h:div>
										<xf:trigger ref=".[count(m:instrVoice)=0]" style="margin-left: 8px;" class="create_button">
											<xf:label><img src="http:/editor/images/list.png" alt="Add from list"/> Add performer(s)</xf:label>
											<xf:action ev:event="DOMActivate">
												<xxf:show dialog="ensemble-performer-menu"/>
											</xf:action>
										</xf:trigger>
										<xf:group ref=".[count(m:instrVoice)&gt;0]">
											<h:div class="vertical_spacer"/> 
											<h:span class="fixed_width_mediumlong">No. &amp; name <h:a class="help">?<h:span 
												class="comment">Enter the number of players in the 
												first input field, and the instrument's name, as it is to be 
												displayed, in the second, e.g. "vl.1" or "violin".
												If no name is entered, a suggested name is inserted when 
												choosing a standard instrument code in the last field.
											</h:span></h:a></h:span>
											<h:span class="fixed_width_long">Standard code <h:a class="help">?<h:span 
												class="comment">Choosing a standard MARC code optimizes data  
												compatibility and interchangeability with other systems.<h:br/>
												Also, it may be used to automatically insert the 
												instrument's name in the "name" field if no name has been entered yet.
											</h:span></h:a></h:span>
											<h:br/>
											<xf:repeat nodeset="m:instrVoice" id="repeat-ensemble-performer">
												<xi:include href="includes/instrvoice-input.xml" parse="xml"/>
												<dcm:element-buttons
													triggers="up down add remove" 
													nodeset="m:instrVoice" 
													origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression[1]/m:perfMedium/m:instrumentation/m:instrVoice[1]"
													index="repeat-ensemble-performer"/>
												<xf:trigger>
													<xf:label><img src="http:/editor/images/list.png" alt="Add" title="Add from list"/> Add from list</xf:label>
													<xf:action ev:event="DOMActivate">
														<xxf:show dialog="ensemble-performer-menu"/>
													</xf:action>
												</xf:trigger>                                            
												<dcm:attribute-editor ref="."/>
												<h:br/>
											</xf:repeat>
										</xf:group>
									</h:fieldset>
								</xf:repeat>
								
								<!-- stand-alone performers -->
								<h:div class="blocklabel strong">Instruments and singers
									<h:a class="help">?<h:span class="comment">List of performers not to be regarded 
										as part of an ensemble. Use this section for some chamber music
										(e.g. piano music, songs with or without piano, music for solo instruments)
										and for soloists (vocalists and instrumentalists). 
									</h:span></h:a>
								</h:div>
								<dcm:create
									nodeset="m:instrVoice"
									label="Add performer"
									origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression[1]/m:perfMedium/m:instrumentation/m:instrVoice[1]"/>
								<xf:group ref=".[m:instrVoice]">
									<h:div class="vertical_spacer"/> 
									<h:span class="fixed_width_mediumlong">No. &amp; name <h:a class="help">?<h:span 
										class="comment">Enter the number of players in the 
										first input field, and the instrument's name, as it is to be 
										displayed, in the second, e.g. "vl.1" or "violin".
										If no name is entered, a suggested name is inserted when 
										choosing a standard instrument code in the last field.
									</h:span></h:a></h:span>
									<h:span class="fixed_width_long">Standard code <h:a class="help">?<h:span 
										class="comment">Choosing a standard MARC code optimizes data  
										compatibility and interchangeability with other systems.<h:br/>
										Also, it may be used to automatically insert the 
										instrument's name in the "name" field if no name has been entered yet.
									</h:span></h:a></h:span>
									<h:span class="fixed_width_short" style="text-align:center;">Solo <h:a class="help">?<h:span 
										class="comment">Mark performers as soloists only when they are to be 
										regarded as soloists as opposed to an ensemble.<h:br/> 
										"Solo" should usually not be used with chamber music or 
										music for one instrument.</h:span></h:a></h:span>
									<h:br/>
									<xf:repeat nodeset="m:instrVoice" id="repeat-performer">
										<xi:include href="includes/instrvoice-input.xml" parse="xml"/>
										<h:span class="fixed_width_short"  style="text-align:center;">
											<xf:input ref="@solo"><xf:label> </xf:label></xf:input>
										</h:span>
										<dcm:id ref="."/>
										<dcm:element-buttons
											triggers="add up down copy remove" 
											nodeset="m:instrVoice" 
											origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression[1]/m:perfMedium/m:instrumentation/m:instrVoice[1]"
											index="repeat-performer"/>
										<dcm:id/>
										<dcm:attribute-editor/>
										<h:br/>
									</xf:repeat>
								</xf:group>
							</xf:group>
							
							
							<h:div class="blocklabel strong">Roles
								<h:a class="help">?<h:span class="comment">A list of roles (characters)
									appearing in the piece. Role names may be entered in more than one language.                                        
								</h:span></h:a>                                        
								<xf:group ref="m:castList">
									<dcm:id/>
									<dcm:attribute-editor/>
								</xf:group>
							</h:div>
							<dcm:create nodeset="m:castList"
								label="Add role"
								origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression[1]/m:perfMedium/m:castList"/>
							<xf:group ref="m:castList">
								<dcm:create nodeset="m:castItem"
									label="Add role"
									origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression[1]/m:perfMedium/m:castList/m:castItem"/>
								<xf:repeat nodeset="m:castItem" id="repeat-cast">
									<xf:action ev:event="xforms-value-changed">
										<xf:dispatch name="add-id" target="form-group"/>
									</xf:action>
									<h:fieldset>
										<h:legend>
											<xf:output value="if (m:role/m:name[1]!='') then m:role/m:name[1] else '[Role]'"/>
											<dcm:element-buttons
												triggers="add up down del-parent-with-last" 
												nodeset="m:castItem" 
												index="repeat-cast"
												origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression[1]/m:perfMedium/m:castList/m:castItem[1]"/>
											<dcm:id/>
											<dcm:attribute-editor/>
										</h:legend>
										<xf:repeat nodeset="m:role/m:name" id="repeat-role">
											<xxf:variable name="pos" select="position()"/>
											<xf:input ref="."><xf:label>Name: <h:a class="help">?<h:span
												class="comment">E.g. "Erik", "A servant" or "Villagers"</h:span></h:a></xf:label></xf:input>
											<xf:input ref="../../m:roleDesc[$pos]" class="long"><xf:label> Description: <h:a class="help">?<h:span
												class="comment">An optional description of the role, e.g. 
												"King of Denmark" or "Rigoletto's daughter"</h:span></h:a></xf:label></xf:input>
											<dcm:attribute-editor ref="../../m:roleDesc[$pos]"/>										
											<xf:select1 ref="@xml:lang" xxf:refresh-items="false">
												<xf:label/>
												<xf:itemset nodeset="instance('languages')/language">
													<xf:label><xf:output value="."/></xf:label>
													<xf:value ref="@xml:id"></xf:value>
												</xf:itemset>
												
												<xf:action ev:event="xforms-value-changed">
													<xxf:variable name="lang" select="."/>
													<xf:setvalue ref="../../../m:roleDesc[$pos]/@xml:lang" value="$lang"/>
													<!--<xf:setvalue ref="$binding/m:perfMedium/m:castList/m:castItem[index('repeat-cast')]/m:roleDesc[$pos]/@xml:lang" value="$lang"/>-->
												</xf:action>
											</xf:select1>
											<!-- edit buttons --> 
											<h:span class="editmenu" style="margin-left: 8px;">
												<xf:trigger appearance="minimal" class="element-button">
													<xf:label><h:img src="http:/editor/images/copy.gif" alt="Copy" title="Duplicate row"/></xf:label>
													<xf:action ev:event="DOMActivate">
														<xxf:variable name="idx" select="index('repeat-role')"/>
														<xf:insert context="parent::node()" nodeset="m:name" at="$idx"
															origin="m:name[$idx]"/>
														<xf:insert context="../.." nodeset="m:roleDesc" at="$idx"
															origin="m:roleDesc[$idx]"/>
														<xf:dispatch name="id-update" target="form-group"/>
													</xf:action>
												</xf:trigger>
												<xf:trigger appearance="minimal" class="element-button">
													<xf:label><h:img src="http:/editor/images/add.gif" alt="Add" title="Add row"/></xf:label>
													<xf:action ev:event="DOMActivate">
														<xxf:variable name="idx" select="index('repeat-role')"/>
														<xf:insert context="parent::node()" nodeset="m:name" at="$idx"
															origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression[1]/m:perfMedium/m:castList/m:castItem[1]/m:role/m:name"/>
														<xf:insert context="../.." nodeset="m:roleDesc" at="$idx"
															origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression[1]/m:perfMedium/m:castList/m:castItem[1]/m:roleDesc"/>
														<xf:dispatch name="id-update" target="form-group"/>
													</xf:action>
												</xf:trigger>
												<xf:trigger appearance="minimal" class="element-button">
													<xf:label><h:img src="http:/editor/images/remove.gif" alt="Delete" title="Delete row"/></xf:label>
													<xf:action ev:event="DOMActivate">
														<xxf:variable name="idx" select="index('repeat-role')"/>
														<xf:delete nodeset="../m:name" at="$idx"/>
														<xf:delete nodeset="../../m:roleDesc" at="$idx"/>
														<xf:dispatch name="xforms-value-changed" target="form-group"/>
													</xf:action>
												</xf:trigger>
											</h:span>
											<!-- end buttons -->
											<dcm:attribute-editor/>
											<h:br/>
										</xf:repeat>
										
										<!-- role performer(s) -->
										<dcm:create
											nodeset="m:instrVoice"
											label="Add performer"
											origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression[1]/m:perfMedium/m:castList/m:castItem/m:instrVoice[1]"/>
										<xf:group ref=".[m:instrVoice]">
											<h:div class="vertical_spacer"/> 
											<xf:repeat nodeset="m:instrVoice" id="repeat-role-performer">
												<xf:input ref="." class="mediumshort">
													<xf:label>Voice <h:a class="help">?<h:span 
														class="comment">Indicates the type of vocalist(s) 
														or vocal ensemble performing this role,
														e.g. "S.", "Soprano" or "Choir (SSATB)".<h:br/>
														If no name is entered, a suggested name is inserted when 
														choosing a standard code in the last field.
													</h:span></h:a></xf:label>
												</xf:input>
												<xf:select1 ref="@code" class="long">
													<xf:label> Standard code <h:a class="help">?<h:span 
														class="comment">Choosing a standard MARC code optimizes data  
														compatibility and interchangeability with other systems.<h:br/>
														Also, it may be used to automatically insert the 
														voice type in the "Voice" field if none has been entered yet.
													</h:span></h:a></xf:label>
													<xf:item>
														<xf:label>- Please select -</xf:label>
														<xf:value/>
													</xf:item>
													<xf:itemset nodeset="instance('instruments')/m:instrVoice[substring(@code,1,1)='v']">
														<xf:label><xf:output value="concat(@code, ' (',@label,')')"/></xf:label>
														<xf:value ref="@code"/>
													</xf:itemset>
													<xf:itemset nodeset="instance('ensembles')/m:instrVoiceGrp[substring(@code,1,1)='c']">
														<xf:label><xf:output value="concat(@code, ' (',m:head,')')"/></xf:label>
														<xf:value ref="@code"/>
													</xf:itemset>
													<xf:action ev:event="xforms-value-changed">
														<!-- insert voice name (display name) if empty -->
														<xxf:variable name="instrument" select="."></xxf:variable>
														<xf:action if="..=''">
															<xf:setvalue ref=".." value="instance('instruments')/m:instrVoice[@code=$instrument]"/>
														</xf:action>
													</xf:action>
												</xf:select1>
												<xf:input ref="@solo"><xf:label> Solo <h:a class="help">?<h:span 
													class="comment">Mark performers as soloists only when they are to be 
													regarded as soloists as opposed to an ensemble.<h:br/> 
													"Solo" should usually not be used with chamber music or 
													songs.</h:span></h:a></xf:label></xf:input>
												<dcm:id ref="."/>
												<dcm:element-buttons
													triggers="add up down copy remove" 
													nodeset="m:instrVoice" 
													origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression[1]/m:perfMedium/m:instrumentation/m:instrVoice[1]"
													index="repeat-performer"/>
												<dcm:id/>
												<dcm:attribute-editor/>
												<h:br/>
											</xf:repeat>
										</xf:group>
										<!-- end role performer(s) -->
										
									</h:fieldset>
								</xf:repeat>
							</xf:group>
							
						</xf:group>
						
					</h:fieldset>
					
					<!-- Components  -->
					<h:fieldset>
						<h:legend>Components <h:a class="help">?<h:span class="comment">Use components to list the individual 
							pieces (movements, acts, scenes, sections etc.) that constitute this 
							<xf:group ref=".[count(../m:expression)=1]">
								work.
							</xf:group>
							<xf:group ref=".[count(../m:expression)&gt;1]">
								version.
							</xf:group><h:br/>
							If there is no subdivision at this level, no components should be defined.<h:br/>
							Components may be nested to define several layers of components (e.g. a work 
							divided into acts, each divided into scenes)
						</h:span></h:a>
							<dcm:attribute-editor ref="m:componentGrp"/>
						</h:legend>
						<dcm:create 
							nodeset="m:componentGrp"
							label="Add component group"
							origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression[1]/m:componentGrp"/>
						<xf:group ref="m:componentGrp">
							<dcm:create
								nodeset="m:expression"
								label="Add components"
								origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression[1]/m:componentGrp/m:expression[1]"/>
							<h:table class="element_list" cellspacing="0" cellpadding="0" border="0">
								<xf:repeat nodeset="m:expression" id="component-list1">
									<h:tr class="hoverclass">
										<h:td>
											<xf:group ref=".[@n!='']"><xf:output value="@n"/>.&#160;</xf:group>
											<dcm:id ref="."/>
											<xf:output 
												value="m:titleStmt/m:title"/><xf:group 
													ref=".[normalize-space(m:titleStmt/m:title[1]) and normalize-space(m:tempo)]">. </xf:group>
											<xf:output value="m:tempo"/>
											<xf:group ref=".[normalize-space(concat(@n,m:titleStmt/m:title[1],m:tempo))='']"> 
												[No number, title or tempo] 
											</xf:group>
											&#160;
										</h:td>
										<h:td style="text-align:right;">
											<xf:group ref=".[instance('temp')/file_exists='true']">
												<xf:trigger>
													<xf:label><h:img src="http:/editor/images/edit.gif" title="Open component editor"/> Edit</xf:label>
													<xf:action ev:event="DOMActivate">
														<xxf:variable name="uri" 
															select="concat(instance('parameters')/dcm:orbeon_dir,'?uri=',instance('parameters')/dcm:form_home,'details-expression.xml&amp;doc=',instance('parameters')/dcm:xml_file,'&amp;id=',@xml:id)"/>
														<xf:action if="instance('temp')/changed='true'">
															<xf:setvalue ref="instance('temp')/target_uri" value="$uri"/>
															<xxf:show dialog="exit-warning-dialog"/>
														</xf:action>	
														<xf:action if="instance('temp')/changed='false'">
															<xf:load resource="{$uri}" show="replace"/>
														</xf:action>
													</xf:action>
												</xf:trigger>
											</xf:group>
											<xf:group ref=".[instance('temp')/file_exists!='true']">
												<h:small>File must be saved before components can be edited</h:small>
											</xf:group>
										</h:td>
										<h:td class="buttons_cell" style="text-align:right;">
					
											<h:img src="http:/editor/images/arrow_left_disabled.png" class="button_patch"/>
											
											<xxf:variable name="tooManySublevels" select="m:componentGrp/m:expression/m:componentGrp/m:expression"/> 
											<xxf:variable name="expTarget" select="preceding-sibling::m:expression[1][not($tooManySublevels)]"/>
											<xf:group ref=".[not($expTarget)]">
												<h:img src="http:/editor/images/arrow_right_disabled.png" class="button_patch"/><xf:output value="''"/>
											</xf:group>
											<xf:trigger appearance="minimal" ref=".[$expTarget]">
												<xf:label><h:img src="http:/editor/images/arrow_right.png" alt="move right" title="Make this a sub-component (child) of the above"/></xf:label>
												<xf:action ev:event="DOMActivate">
													<xxf:variable name="expOrig" select="."/>
													<xf:action if="not($expTarget/m:componentGrp)">
														<!-- insert <componentGrp> if it doesn't exist -->
														<xxf:variable name="origin" select="instance('reduced-template')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression/m:componentGrp"/>
														<xf:insert context="$expTarget" origin="$origin" nodeset="m:componentGrp" at="1" position="before"/>
														<!-- move the componentGrp into place according to the empty model if necessary-->
														<xxf:variable name="emptyDocExp" select="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression/m:componentGrp"/>
														<xf:action while="$emptyDocExp/preceding-sibling::*[local-name()=local-name($expTarget/m:componentGrp/following-sibling::*[1])]
															and count($expTarget/m:componentGrp/preceding-sibling::*)+1 &lt; count($expTarget/*)">
															<xxf:variable name="pos" select="count($expTarget/m:componentGrp/preceding-sibling::*)+1"/>
															<xf:insert context="$expTarget" origin="m:componentGrp"
																nodeset="*" at="$pos+1" position="after"/>
															<xf:delete context="$expTarget" nodeset="*" at="$pos"/>	
														</xf:action>
													</xf:action>
													<xf:insert context="$expTarget/m:componentGrp" nodeset="m:expression" origin="$expOrig"/>
													<xf:delete context="." nodeset="." at="index('component-list1')"/>
												</xf:action>
											</xf:trigger>
											
											<dcm:element-buttons triggers="up down copy add remove" nodeset="m:expression" index="component-list1" 
												origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression/m:componentGrp/m:expression"/>
											<dcm:attribute-editor ref="."/>
										</h:td>
									</h:tr>
									
									<!-- 1st sub-level -->
									<h:tr>
										<h:td colspan="3">
											<xf:group ref="m:componentGrp">
												<h:table class="sub_element_list" cellspacing="0" cellpadding="0" border="0">
													<xf:repeat nodeset="m:expression" id="component-list2">
														<h:tr class="hoverclass">
															<h:td class="tree_cell">
																<xf:group ref=".[count(following-sibling::*)=0]">
																	<h:img class="tree" src="http:/editor/images/tree-1.png" alt="sub-element"></h:img>&#160;
																</xf:group>
																<xf:group ref=".[count(following-sibling::*)!=0]">
																	<h:img class="tree" src="http:/editor/images/tree-2.png" alt="sub-element"></h:img>&#160;
																</xf:group>
															</h:td>
															<h:td>
																<xf:group ref=".[@n!='']"><xf:output value="@n"/>.&#160;</xf:group>
																<dcm:id ref="."/>
																<xf:output value="m:titleStmt/m:title[1]"/><xf:group
																	ref=".[normalize-space(m:titleStmt/m:title[1]) and normalize-space(m:tempo)]">. </xf:group>
																<xf:output value="m:tempo"/>
																<xf:group ref=".[normalize-space(concat(@n,m:titleStmt/m:title[1],m:tempo))='']"> 
																	[No number, title or tempo] 
																</xf:group>
																&#160;
															</h:td>
															<h:td style="text-align:right;">
																<xf:group ref=".[instance('temp')/file_exists='true']">
																	<xf:trigger>
																		<xf:label><h:img src="http:/editor/images/edit.gif" title="Open component editor"/> Edit</xf:label>
																		<xf:action ev:event="DOMActivate">
																			<xxf:variable name="uri" 
																				select="concat(instance('parameters')/dcm:orbeon_dir,'?uri=',instance('parameters')/dcm:form_home,'details-expression.xml&amp;doc=',instance('parameters')/dcm:xml_file,'&amp;id=',@xml:id)"/>
																			<xf:action if="instance('temp')/changed='true'">
																				<xf:setvalue ref="instance('temp')/target_uri" value="$uri"/>
																				<xxf:show dialog="exit-warning-dialog"/>
																			</xf:action>	
																			<xf:action if="instance('temp')/changed='false'">
																				<xf:load resource="{$uri}" show="replace"/>
																			</xf:action>
																		</xf:action>
																	</xf:trigger>
																</xf:group>
																<xf:group ref=".[instance('temp')/file_exists!='true']">
																	<h:small>File must be saved before components can be edited</h:small>
																</xf:group>
															</h:td>
															<h:td class="buttons_cell" style="text-align:right;">
											
																<xf:trigger appearance="minimal">
																	<xf:label><h:img src="http:/editor/images/arrow_left.png" alt="move left" title="Move up one level"/></xf:label>
																	<xf:action ev:event="DOMActivate">
																		<xxf:variable name="origin" select="."/>
																		<xf:insert context="../../../../m:componentGrp" origin="$origin" nodeset="*" at="index('component-list1')+1" position="after"/>
																		<xf:delete nodeset="."/>
																	</xf:action>
																</xf:trigger>
																
																<xxf:variable name="tooManySublevels" select="m:componentGrp/m:expression"/> 
																<xxf:variable name="expTarget" select="preceding-sibling::m:expression[1][not($tooManySublevels)]"/>
																<xf:group ref=".[not($expTarget)]">
																	<h:img src="http:/editor/images/arrow_right_disabled.png" class="button_patch"/><xf:output value="''"/>
																</xf:group>
																<xf:trigger appearance="minimal" ref=".[$expTarget]">
																	<xf:label><h:img src="http:/editor/images/arrow_right.png" alt="move right" title="Make this a sub-component (child) of the above"/></xf:label>
																	<xf:action ev:event="DOMActivate">
																		<xxf:variable name="expOrig" select="."/>
																		<xf:action if="not($expTarget/m:componentGrp)">
																			<!-- insert <componentGrp> if it doesn't exist -->
																			<xxf:variable name="origin" select="instance('reduced-template')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression/m:componentGrp"/>
																			<xf:insert context="$expTarget" origin="$origin" nodeset="m:componentGrp" at="1" position="before"/>
																			<!-- move the componentGrp into place according to the empty model if necessary-->
																			<xxf:variable name="emptyDocExp" select="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression/m:componentGrp"/>
																			<xf:action while="$emptyDocExp/preceding-sibling::*[local-name()=local-name($expTarget/m:componentGrp/following-sibling::*[1])]
																				and count($expTarget/m:componentGrp/preceding-sibling::*)+1 &lt; count($expTarget/*)">
																				<xxf:variable name="pos" select="count($expTarget/m:componentGrp/preceding-sibling::*)+1"/>
																				<xf:insert context="$expTarget" origin="m:componentGrp"
																					nodeset="*" at="$pos+1" position="after"/>
																				<xf:delete context="$expTarget" nodeset="*" at="$pos"/>	
																			</xf:action>
																		</xf:action>
																		<xf:insert context="$expTarget/m:componentGrp" nodeset="m:expression" origin="$expOrig"/>
																		<xf:delete context="." nodeset="." at="index('component-list1')"/>
																	</xf:action>
																</xf:trigger>
																
																<dcm:element-buttons triggers="up down copy add remove" nodeset="m:expression" index="component-list2" 
																	origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression/m:componentGrp/m:expression"/>
																<dcm:attribute-editor ref="."/>
															</h:td>
														</h:tr>
														
														<!-- 2nd sub-level -->
														<h:tr>
															<h:td colspan="4">
																<xf:group ref="m:componentGrp">
																	<h:table class="sub_element_list" cellspacing="0" cellpadding="0" border="0">
																		<xf:repeat nodeset="m:expression" id="component-list3">
																			<h:tr class="hoverclass">
																				<h:td class="tree_cell">
																					<xf:group ref=".[count(../../following-sibling::*)!=0]">
																						<h:img class="tree" src="http:/editor/images/tree-3.png" alt="sub-element"/>
																					</xf:group>
																					<xf:group ref=".[count(../../following-sibling::*)=0]">
																						<h:img class="tree" src="http:/editor/images/spacer.png" width="22" alt="spacer"/>
																					</xf:group>
																				</h:td>
																				<h:td class="tree_cell">
																					<xf:group ref=".[count(following-sibling::*)=0]">
																						<h:img class="tree" src="http:/editor/images/tree-1.png" alt="sub-element"/>
																					</xf:group>
																					<xf:group ref=".[count(following-sibling::*)!=0]">
																						<h:img class="tree" src="http:/editor/images/tree-2.png" alt="sub-element"/>
																					</xf:group>
																				</h:td>
																				<h:td>
																					<xf:group ref=".[@n!='']"><xf:output value="@n"/>.&#160;</xf:group>
																					<dcm:id ref="."/>
																					<xf:output value="m:titleStmt/m:title[1]"/><xf:group
																						ref=".[normalize-space(m:titleStmt/m:title[1]) and normalize-space(m:tempo)]">. </xf:group>
																					<xf:output value="m:tempo"/>
																					<xf:group ref=".[normalize-space(concat(@n,m:titleStmt/m:title[1],m:tempo))='']">
																						[No number, title or tempo] 
																					</xf:group>
																					&#160;
																				</h:td>
																				<h:td style="text-align:right;">
																					<xf:group ref=".[instance('temp')/file_exists='true']">
																						<xf:trigger>
																							<xf:label><h:img src="http:/editor/images/edit.gif" title="Open component editor"/> Edit</xf:label>
																							<xf:action ev:event="DOMActivate">
																								<xxf:variable name="uri" 
																									select="concat(instance('parameters')/dcm:orbeon_dir,'?uri=',instance('parameters')/dcm:form_home,'details-expression.xml&amp;doc=',instance('parameters')/dcm:xml_file,'&amp;id=',@xml:id)"/>
																								<xf:action if="instance('temp')/changed='true'">
																									<xf:setvalue ref="instance('temp')/target_uri" value="$uri"/>
																									<xxf:show dialog="exit-warning-dialog"/>
																								</xf:action>	
																								<xf:action if="instance('temp')/changed='false'">
																									<xf:load resource="{$uri}" show="replace"/>
																								</xf:action>
																							</xf:action>
																						</xf:trigger>
																					</xf:group>
																					<xf:group ref=".[instance('temp')/file_exists!='true']">
																						<h:small>File must be saved before components can be edited</h:small>
																					</xf:group>
																				</h:td>
																				<h:td class="buttons_cell" style="text-align:right;">
																					
																					<xf:trigger appearance="minimal">
																						<xf:label><h:img src="http:/editor/images/arrow_left.png" alt="move left" title="Move up one level"/></xf:label>
																						<xf:action ev:event="DOMActivate">
																							<xxf:variable name="origin" select="."/>
																							<xf:insert context="../../../../m:componentGrp" origin="$origin" nodeset="*" at="index('component-list1')+1" position="after"/>
																							<xf:delete nodeset="."/>
																						</xf:action>
																					</xf:trigger>
																					
																					<h:img src="http:/editor/images/arrow_right_disabled.png" class="button_patch"/>
																					
																					<dcm:element-buttons triggers="up down copy add remove" nodeset="m:expression" index="component-list3" 
																					origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression/m:componentGrp/m:expression"/>
																					<dcm:attribute-editor ref="."/>
																				</h:td>
																			</h:tr>
																		</xf:repeat>
																	</h:table>
																</xf:group>
															</h:td>
														</h:tr>
														<!-- end 2nd sub-level -->
														
													</xf:repeat>
												</h:table>
											</xf:group>
										</h:td>
									</h:tr>
									<!-- end 1st sub-level -->
									
								</xf:repeat>
							</h:table>
						</xf:group>
					</h:fieldset>
					
					
					
					
				</h:fieldset>
			</xf:repeat>
			
		</h:div>
	</xf:group>
	
	<xi:include href="includes/code-inspector.xml" parse="xml"/>
	<h:br clear="all"/>
	
</h:div>
