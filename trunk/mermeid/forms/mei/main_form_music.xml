<?xml version="1.0" encoding="UTF-8"?>
<h:div xmlns:h="http://www.w3.org/1999/xhtml" 
	xmlns:xf="http://www.w3.org/2002/xforms" 
	xmlns:xxf="http://orbeon.org/oxf/xml/xforms"
	xmlns:fr="http://orbeon.org/oxf/xml/form-runner"
	xmlns:xi="http://www.w3.org/2001/XInclude" 
	xmlns:exsl="http://exslt.org/common"
	xmlns:dcm="http://www.kb.dk/dcm"
	xmlns:m="http://www.music-encoding.org/ns/mei" 
	xmlns:ev="http://www.w3.org/2001/xml-events"
	xmlns:opensearch="http://a9.com/-/spec/opensearch/1.1/"
	id="music-div">
	
	<h:div class="inputdiv">
		
		<xf:group ref="instance('data-instance')/m:meiHead[not(m:workDesc/m:work/m:expressionList/m:expression)]">
			<h:div class="vertical_spacer"/>
			<dcm:create 
				nodeset="m:workDesc"
				label="Add basic work metadata"
				origin="instance('reduced-template')/m:meiHead/m:workDesc"/>
			<dcm:create ref="m:workDesc"
				nodeset="m:work"
				label="Add basic work metadata"
				origin="instance('reduced-template')/m:meiHead/m:workDesc/m:work"/>
			<dcm:create ref="m:workDesc/m:work"
				nodeset="m:expressionList"
				label="Add basic music metadata"
				origin="instance('reduced-template')/m:meiHead/m:workDesc/m:work/m:expressionList"/>
			<dcm:create ref="m:workDesc/m:work/m:expressionList"
				nodeset="m:expression"
				label="Add basic music metadata"
				origin="instance('reduced-template')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression"/>
		</xf:group>
		
		<xf:group ref="instance('data-instance')/m:meiHead/m:workDesc/m:work/m:expressionList">
			
			<xf:repeat nodeset="m:expression" id="repeat-expression">
				
				<h:fieldset>
					<h:legend>Version
						<h:a class="help">&#160;?<h:span class="comment">Information at version level.<h:br/> 
							To create a new version, click the 'add' or 'copy' buttons on the right.<h:br/>
							To indicate the individual pieces (movements, acts or any other subdivision) in this work 
							or version, use 'Components' below.<h:br/>
							In FRBR terms, versions and components correspond to the 'expression' level.</h:span></h:a>
						<dcm:element-buttons 
							triggers="all" 
							nodeset="m:expression" 
							index="repeat-expression"
							origin="instance('reduced-template')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression[1]"/>
						<dcm:id/>
						<dcm:attribute-editor ref="."/>
					</h:legend>
					
					<xf:var name="num_ex" as="string" select="count(../m:expression)"/>
					<xf:var name="binding" select="."/>
					
					<!-- display expression-specific details at top level only if more than one expression or not empty -->
					<xf:group ref=".[number($num_ex)&gt;1 or m:titleStmt/m:title[normalize-space(.)!='']]">
						<h:div class="blocklabel" style="margin-top:10px">
							Version title
							<h:a class="help">&#160;?<h:span class="comment">E.g. 'Version for piano' or 
								'Discarded version'. Enter a version title only if you 
								want to distinguish different versions of the work. 
								Otherwise leave empty.</h:span></h:a>
						</h:div>
						<dcm:create nodeset="m:titleStmt"
							label="Add version title"
							origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression[1]/m:titleStmt"/>
						<xf:group ref="m:titleStmt">
							<xf:repeat nodeset="m:title" id="repeat-version-titles" class="input_group">
								<h:div>
									<xf:group ref=".[number($num_ex)=1 and .!='']">
										<h:a class="help_plain"><h:img src="{instance('parameters')/dcm:server_name}/editor/images/warning.png" 
											alt="warning"/><h:span class="comment">
												When only one version is given, 
												no title should be entered at this level. <h:br/>
												If no alternative versions are added, please indicate the 
												title at work level (i.e., the 'Work' tab) instead.
											</h:span></h:a>
									</xf:group>
									<xi:include href="includes/input_with_xmllang.xml" parse="xml"/>
									<xf:group ref=".[count(../m:title)&gt;1]">
										<dcm:element-buttons 
											triggers="all" 
											nodeset="m:title" 
											index="repeat-version-titles"
											origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression[1]/m:titleStmt/m:title"/>
									</xf:group>										
									<xf:group ref=".[count(../m:title)=1]">
										<dcm:element-buttons 
											triggers="up down copy add" 
											nodeset="m:title" 
											index="repeat-version-titles"
											origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression[1]/m:titleStmt/m:title"/>
										<xf:trigger appearance="minimal" class="non-standard_button editmenu">
											<xf:label><img src="{instance('parameters')/dcm:server_name}/editor/images/remove.gif" alt="Delete row"/></xf:label>
											<xf:action ev:event="DOMActivate">
												<xf:setvalue ref="." value="''"/>
											</xf:action>
										</xf:trigger>
									</xf:group>
									<dcm:attribute-editor ref="."/>
								</h:div>
							</xf:repeat>
						</xf:group>
					</xf:group>
					
					<xf:group ref=".[number($num_ex)&gt;1 or m:identifier[normalize-space(.)!='']]">
						<h:div class="blocklabel">Identification</h:div>
						<dcm:create 
							nodeset="m:identifier"
							label="Add identifier"
							origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression/m:identifier"/>
						<xf:group ref="m:identifier">
							<xf:group ref=".[number($num_ex)=1 and .!='']">
								<h:a class="help_plain"><h:img src="{instance('parameters')/dcm:server_name}/editor/images/warning.png" 
									alt="warning"/><h:span class="comment">
										When only one version is given, 
										no version identifier should normally be entered.
									</h:span></h:a>
							</xf:group>
							<h:div class="blocklabel">
								<h:span class="fixed_width"> List name <h:a class="help">&#160;?<h:span class="comment">Name of a
									list, catalogue or other numbering system identifying this version (e.g. 'Opus',
									'CNW', 'BWV', 'Neue Mozart-Ausgabe' etc.)
								</h:span></h:a></h:span>
								<h:span class="fixed_width"> No. <h:a class="help">&#160;?<h:span class="comment">The work's number or
									signature in the list identifying it</h:span></h:a>
								</h:span>
							</h:div>
						</xf:group>
						<xf:repeat nodeset="m:identifier" id="work-id-repeat">
							<h:div>					
								<xf:input ref="@label" class="mediumshort"/>
								<xf:input ref="." class="mediumshort"/>
								<dcm:element-buttons 
									triggers="add remove" 
									nodeset="m:identifier" 
									index="work-id-repeat"
									origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression/m:identifier"/>
								<dcm:attribute-editor ref="."/>
							</h:div>
						</xf:repeat>
						
					</xf:group>
					
					<h:fieldset>
						<h:legend>Music metadata
							<h:a class="help">&#160;?<h:span class="comment">Use at this level only with single-movement works, 
								or to specify the main key of a work or version.  
							</h:span></h:a>
						</h:legend>
						
						<h:div>     
							<dcm:create 
								nodeset="m:tempo"
								label="Add tempo"
								origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression[1]/m:tempo"/>
							<xf:input ref="m:tempo" class="maxlong">
								<xf:label class="fixed_width">Tempo</xf:label>
							</xf:input>
							<xf:trigger appearance="minimal" ref="m:tempo">
								<xf:label><h:img src="{instance('parameters')/dcm:server_name}/editor/images/remove.gif" alt="Delete" title="Delete row"/></xf:label>
								<xf:action ev:event="DOMActivate">
									<xf:delete nodeset="."/>
								</xf:action>
							</xf:trigger>
							<dcm:attribute-editor ref="m:tempo"/>
							<h:br clear="all"/>  
							<xi:include href="includes/meter-input.xml" parse="xml"/>
							
							<h:br clear="all"/>
							<dcm:create 
								nodeset="m:key"
								label="Add main key"
								origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression[1]/m:key"/>
							<xf:group ref="m:key">
								<xi:include href="includes/key_select.xml" parse="xml"/>
								<xf:trigger appearance="minimal">
									<xf:label><h:img src="{instance('parameters')/dcm:server_name}/editor/images/remove.gif" alt="Delete" title="Delete row"/></xf:label>
									<xf:action ev:event="DOMActivate">
										<xf:delete nodeset="."/>
									</xf:action>
								</xf:trigger>
								<dcm:attribute-editor/>
							</xf:group>
							<h:br clear="all"/>
							<h:br clear="all"/>
							<dcm:create
								nodeset="m:perfDuration"
								label="Add duration"
								origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression[1]/m:perfDuration"/>
							<h:div>
								<xf:repeat nodeset="m:perfDuration" id="details-expression-duration-repeat">
									<xf:input ref=".">
										<xf:label class="fixed_width">Duration <h:a class="help">&#160;?<h:span 
											class="comment">Duration can be indicated in any form, such as "01:23:00", "4&apos;33&apos;&apos;" or "approx. 10 minutes". 
											</h:span></h:a></xf:label>
									</xf:input>
									<dcm:element-buttons
										triggers="remove"
										nodeset="m:perfDuration"
										index="details-expression-duration-repeat"
										origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression[1]/m:perfDuration"/>
									<dcm:attribute-editor/>
								</xf:repeat>
							</h:div>
							<dcm:create 
								nodeset="m:extent"
								label="Add extent"
								origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression[1]/m:extent"/>
							<xf:repeat nodeset="m:extent" id="details-expression-extent-repeat">
								<h:div>
									<xf:input ref=".">
										<xf:label class="fixed_width">Extent <h:a class="help">&#160;?<h:span 
											class="comment">Extent in any medium other than time: number of measures or pages, for instance.
											Non-standard units of measurement can be included in the text field.
										</h:span></h:a></xf:label>
									</xf:input>
									<xi:include href="includes/unit-select.xml" parse="xml"/>
									<!-- to make <extent> repeatable, add 'add' to triggers -->
									<dcm:element-buttons
										triggers="remove" 
										nodeset="m:extent" 
										index="details-expression-extent-repeat"
										origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression[1]/m:extent"/>
									<dcm:attribute-editor/>
								</h:div>
							</xf:repeat>							
						</h:div>   
						<h:br clear="all"/>
						
						<h:div class="vertical_spacer"/>
						<h:span class="blocklabel strong">Incipits <h:a class="help">&#160;?<h:span class="comment">Both 
							music and text incipits may be added. Music incipits can be added as links to graphic files or
							entered using an encoding such as <em>Plaine &amp; Easie Code</em>. <br/>
							Incipits encoded in MEI will be displayed in the HTML preview but are not editable in MerMEId.
						</h:span></h:a></h:span>
						<dcm:create nodeset="m:incip"
							label="Add incipits"
							origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression[1]/m:incip"/>
						
						<xi:include href="includes/incipit-input.xml" parse="xml"/>
						
					</h:fieldset>
					
					<h:fieldset>
						<h:legend>Persons <h:a class="help">&#160;?<h:span 
							class="comment">Persons with connection to this particular version
							only, e.g. an arranger, or a text author in a collection of songs 
							with different authors</h:span></h:a></h:legend>	
						<dcm:create nodeset="m:titleStmt"
							label="Add persons"
							origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression/m:titleStmt"/>
						<xf:group ref="m:titleStmt">
							<dcm:create 
								nodeset="m:respStmt"
								label="Add person"
								origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression[1]/m:titleStmt/m:respStmt"/>
							<xf:group ref="m:respStmt">
								<xi:include href="includes/person-input.xml"/>
							</xf:group>
						</xf:group>
					</h:fieldset>
					
					
					<!-- Relations -->
					<h:fieldset>
						<h:legend>Relations <h:a class="help">&#160;?<h:span class="comment">Relations between this version and 
							other versions or files may be specified here to create links between them.<h:br/>
							For instance, if this version is a revision of an earlier version it may be specified here
							by selecting the 'is revision of'. <h:br/>
							On the target of the relation, you may want to add a link pointing to this one and defining 
							the relation as 'has revision' to make the linking bidirectional.<h:br/>
							The relation can also point to an external ressource such as an edition or digitization. 
							In that case select the 'has reproduction' relation.
						</h:span></h:a></h:legend>
						<dcm:create 
							nodeset="m:relationList"
							label="Add relation"
							origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression/m:relationList"/>
						<dcm:create ref="m:relationList" 
							nodeset="m:relation"
							label="Add relation"
							origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression/m:relationList/m:relation"/>
						
						
						<h:table class="element_list" cellspacing="0" cellpadding="0" border="0">
							<xf:repeat nodeset="m:relationList/m:relation" id="version_relations">
								<xf:var name="context_node" select="."/>
								<h:tr>
									<h:td>
										<h:span>This version </h:span>
										<xi:include href="includes/relation_select.xml" parse="xml"/>
										<xf:group ref="@target">
											<xf:input ref="." class="maxlong">
												<xf:label>URI <h:a class="help">&#160;?<h:span class="comment">The location of the linked ressource (target). 
													The target may be either an external file (such as 'http://www.example.org/some_file.xml'), an internal 
													reference to an element in the file you are editing (by XML ID, such as '#expression_1'), or a combination
													of both (like 'http://www.example.org/some_file.xml#expression_1'). <h:br/>
													The target URI may be entered manually or selected using the "Select file" button.<h:br/>
													Please note: in MerMEId's HTML preview, relative URIs are interpreted as being links to other 
													MEI files to be displayed as MerMEId previews as well. To avoid this, make the URI absolute 
													(i.e., starting with a protocol like "http://"). 
												</h:span></h:a>
												</xf:label>
											</xf:input>
											<xf:trigger>
												<xf:label>Select file...</xf:label>
												<xf:action ev:event="DOMActivate">
													<xf:setvalue ref="instance('temp')/nodeset" 
														value='"instance(&apos;data-instance&apos;)/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression[index(&apos;repeat-expression&apos;)]/m:relationList/m:relation[index(&apos;version_relations&apos;)]"'/>
													<xxf:show dialog="relation_dialog"/>
													<xf:setvalue ref="instance('temp')/target_uri"
														value="concat(instance('parameters')/dcm:server_name,'filter/filtered_scripts/cross-link.xq?get=works')"/>
													<!-- load data on open - may be deactivated if performance is an issue -->
													<xf:send submission="load-fileList"/>
												</xf:action>
											</xf:trigger>
											<xf:trigger appearance="minimal">
												<xf:label><h:span style="vertical-align:bottom;"><h:img src="{instance('parameters')/dcm:server_name}/editor/images/go_to_link.png" 
													title="Go to linked resource"/></h:span></xf:label>
												<xf:action ev:event="DOMActivate">
													<xf:var name="uri" 
														select="concat(
														instance('parameters')/dcm:orbeon_dir,
														'?uri=',
														instance('parameters')/dcm:form_home,
														'edit-work-case.xml&amp;doc=',.)"/>
													<xf:setvalue ref="instance('temp')/target_uri" value="$uri"/>
													<xxf:show dialog="leave-warning-dialog"></xxf:show>
												</xf:action>
											</xf:trigger>
										</xf:group>
									</h:td>
									<h:td>
										<xf:input ref="@label" class="long">
											<xf:label> Label <h:a class="help">&#160;?<h:span class="comment">The text to be 
												displayed as the link text (usually the title of the linked item)</h:span></h:a></xf:label>
										</xf:input>
									</h:td>
									<h:td style="vertical-align:top; white-space:nowrap;">
										<h:span class="editmenu">
											<dcm:element-buttons 
												triggers="up down add del-parent-with-last" 
												nodeset="m:relation" 
												index="version_relations"
												origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:relationList/m:relation"/>
											<dcm:attribute-editor ref="."/>
										</h:span>
									</h:td>
								</h:tr>
							</xf:repeat>
						</h:table>
					</h:fieldset>
					
					<!-- Instrumentation -->
					<h:fieldset>                                                     
						<h:legend>Instruments and voices <h:a class="help">&#160;?<h:span 
							class="comment">Instruments and singers may be grouped into ensembles or specified
							as 'stand-alone' performers. A group of performers acting as an ensemble (including choirs)
							should be defined as such. Each ensemble may or may not have a name (heading) for display, 
							and may or may not list its individual performers.<h:br/>
							Both ensembles and performers should have a standard code (MARC, UNIMARC or some other standard) added to improve
							data compatibility and interchange. Codes are selected from the drop-down menus.							
						</h:span></h:a>
							<dcm:id ref="m:perfMedium"/>
							<dcm:attribute-editor ref="m:perfMedium"/>
						</h:legend>		
						
						<dcm:create  
							nodeset="m:perfMedium"
							label="Add instrumentation &amp; voices"
							origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression[1]/m:componentGrp/m:expression/m:perfMedium[m:perfResList]"/>
						
						<xf:group ref="m:perfMedium">
							<dcm:create
								nodeset="m:perfResList"
								label="Add instrumentation &amp; voices"
								origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression[1]/m:componentGrp/m:expression/m:perfMedium[m:perfResList]/m:perfResList"/>
							<dcm:instrumentation ref="m:perfResList[not(@source)]"/>
							<br/>
							<h:div class="vertical_spacer"/>
							
							<!-- Source-specific instrumentations -->
							<xf:group ref=".[instance('data-instance')/m:meiHead/m:fileDesc/m:sourceDesc/m:source]">
								<xf:var name="thisPerfMedium" select="."/>
								<xf:var name="source-instrumentation-ids" select="string-join(/*//m:perfResList[@source]/@source,' ')"/>
								<xf:var name="all-sources" select="instance('data-instance')/m:meiHead/m:fileDesc/m:sourceDesc/m:source"/>
								<xf:var name="used-sources" select="$all-sources[contains($source-instrumentation-ids, @xml:id)]"/>
								<xf:var name="unused-sources" select="$all-sources[not(contains($source-instrumentation-ids, @xml:id))]"/>
								<!-- a list of sources associated to this particular expression (version) or none -->
								<xf:var name="unused-expression-sources" select="$unused-sources[m:relationList/m:relation[@rel='isEmbodimentOf' and substring-after(@target,'#')=$thisPerfMedium/ancestor::m:expression/@xml:id]]
									| $unused-sources[not(m:relationList/m:relation[@rel='isEmbodimentOf' and @target!=''])]"/>								

								<h:fieldset>
									<h:legend>Source-specific instrumentations 
										<h:a class="help">?<h:span class="comment">In addition to specifying instrumentation and/or voices at work or version level,
										source-specific instrumentations may be added. This allows for the recording of, for instance, the instrumentation used in a piano score 
										for an otherwise orchestral work without adding a piano to the overall instrumentation.<h:br/>
										Create a new such instrumentation by selecting the desired source. Multiple sources may share the same instrumentation. 
										</h:span></h:a>
									</h:legend>
									<xf:repeat nodeset="m:perfResList[@source]" id="source-instrumentation-repeat">
										<xf:var name="perfResList-binding" select="."/>
										<xf:var name="source-id" select="@source"/>
										<h:fieldset>
											<h:legend>Instrumentation
												<dcm:element-buttons 
													triggers="remove" 
													nodeset="m:perfResList" 
													index="source-instrumentation-repeat"
													origin=""/>
											</h:legend>
											<h:div style="float:left; width:400px;">
												<h:b>Applies to source(s):</h:b>
												<h:ul>
													<xf:repeat nodeset="$all-sources[contains($source-id,@xml:id)]">
														<xf:var name="source-title" select="if (string-length(m:titleStmt/m:title) &lt; 35) then 
															m:titleStmt/m:title else concat(substring(m:titleStmt/m:title,1,30),'...')"/>
														<h:li>
															<xf:output value="concat(@label,' ',$source-title,' (',@xml:id,')')"/>
															<xf:trigger appearance="minimal" ref=".[count(tokenize(normalize-space($source-id),' ')) &gt; 1]">
																<xf:label><h:img src="{xxf:instance('parameters')/dcm:server_name}/editor/images/delete.gif" alt="Remove source"/></xf:label>
																<xf:action ev:event="DOMActivate">
																	<xf:var name="updated-source-list" select="concat(substring-before($source-id,@xml:id),substring-after($source-id,@xml:id))"/>
																	<xf:setvalue ref="$perfResList-binding/@source" value="$updated-source-list"/> 
																</xf:action>
															</xf:trigger>
														</h:li>
													</xf:repeat>
												</h:ul>
												<xf:trigger ref=".[$unused-expression-sources]">
													<xf:label><h:img src="{xxf:instance('parameters')/dcm:server_name}/editor/images/list.png" alt="Add source from list"/> Add source</xf:label>
													<xf:action ev:event="DOMActivate">
														<xxf:show dialog="instrumentation-add-source-menu"/>
													</xf:action>
												</xf:trigger> 
											</h:div>
											<h:div style="float:left;">
												<dcm:instrumentation/>
											</h:div>
										</h:fieldset>
										
										<!-- dialog for adding source id to existing instrumentation -->
										<xxf:dialog id="instrumentation-add-source-menu" appearance="full" level="modal"
											close="true" draggable="true" visible="false">
											<xf:label>Sources</xf:label>
											<xf:var name="binding" select="."/>
											<xf:repeat nodeset="$unused-expression-sources" id="instrumentation-source-menu-repeat">
												<xf:var name="sourceId" select="@xml:id"/>
												<xf:trigger submission="replace-form-with">
													<xf:label><h:img src="{xxf:instance('parameters')/dcm:server_name}/editor/images/add.gif" alt="Add source"/>
														<xf:output value="concat(@label,' ',m:titleStmt/m:title,' (',@xml:id,')')"/>
													</xf:label>
													<xf:action ev:event="DOMActivate">
														<xf:setvalue ref="$binding/@source" 
															value="concat(., ' ', $sourceId)"/>
														<xxf:hide dialog="instrumentation-add-source-menu"/>
													</xf:action>
												</xf:trigger>
												<h:br/>
											</xf:repeat>
										</xxf:dialog>			
										
									</xf:repeat>

									<xf:trigger ref=".[$unused-expression-sources]">
										<xf:label><h:img src="{xxf:instance('parameters')/dcm:server_name}/editor/images/list.png" alt="Add source from list"/> Add source instrumentation</xf:label>
										<xf:action ev:event="DOMActivate">
											<xxf:show dialog="instrumentation-add-menu"/>
										</xf:action>
									</xf:trigger> 

									<!-- dialog for adding new source instrumentation -->
									<xxf:dialog id="instrumentation-add-menu" appearance="full" level="modal"
										close="true" draggable="true" visible="false">
										<xf:label>Select source</xf:label>
										<xf:var name="inst-add-binding" select="."/>
										<xf:repeat nodeset="$unused-expression-sources" id="instrumentation-add-menu-repeat">
											<xf:var name="sourceId" select="@xml:id"/>
											<xf:trigger submission="replace-form-with">
												<xf:label><h:img src="{xxf:instance('parameters')/dcm:server_name}/editor/images/add.gif" alt="Add source"/>
													<xf:output value="concat(@label,' ',m:titleStmt/m:title,' (',@xml:id,')')"/>
												</xf:label>
												<xf:action ev:event="DOMActivate">
													<xf:insert context="$inst-add-binding" nodeset="m:perfResList" at="last()" position="after" 
														origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression[1]/m:componentGrp/m:expression/m:perfMedium[m:perfResList]/m:perfResList"/>
													<xf:insert context="$inst-add-binding/m:perfResList[last()]" nodeset="m:perfResList" origin="xxf:attribute('source',$sourceId)"/>
													<xf:insert context="$inst-add-binding/m:perfResList[last()]" nodeset="m:perfResList" origin="xxf:attribute('codedval')"/>
													<xf:insert context="$inst-add-binding/m:perfResList[last()]" nodeset="m:perfResList" origin="xxf:attribute('xml:id',xxf:attribute('xml:id',concat('perfResList_',substring(digest(string(random(true)), 'MD5', 'hex'),1,8))))"/>
													<xxf:hide dialog="instrumentation-add-menu"/>
												</xf:action>
											</xf:trigger>
											<h:br/>
										</xf:repeat>										
										
									</xxf:dialog>			
									
								</h:fieldset>
								
							</xf:group>
							<!-- end source-specific instrumentations -->
							
						</xf:group>
						
					</h:fieldset>

					<!-- Cast list -->
					<h:fieldset>                                                     
						<h:legend>Roles (characters) <h:a class="help">&#160;?<h:span class="comment">A list of named persons (characters) or groups of characters
							appearing in the piece. Role names may be entered in more than one language.                                        
						</h:span></h:a>        
						</h:legend>		
						
						<dcm:create  
							nodeset="m:perfMedium"
							label="Add roles (characters)"
							origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression[1]/m:perfMedium[m:castList][1]"/>
						
						<xf:group ref="m:perfMedium">
							<dcm:create nodeset="m:castList"
								label="Add role (character)"
								origin="xxf:instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression[1]/m:perfMedium[m:castList][1]/m:castList"/>
							<dcm:castlist ref="m:castList[not(@source)]"/>
							
						</xf:group>
						
					</h:fieldset>
					
					<!-- Components  -->
					<h:fieldset>
						<h:legend>Components <h:a class="help">&#160;?<h:span class="comment">Use components to list the individual 
							pieces (movements, acts, scenes, sections etc.) that constitute this 
							<xf:group ref=".[count(../m:expression)=1]">
								work.
							</xf:group>
							<xf:group ref=".[count(../m:expression)&gt;1]">
								version.
							</xf:group><h:br/>
							If there is no subdivision at this level, no components should be defined.<h:br/>
							Components may be nested to define several layers of components (e.g. a work 
							divided into acts, each divided into scenes)
						</h:span></h:a>
							<dcm:attribute-editor ref="m:componentGrp"/>
						</h:legend>
						<dcm:create 
							nodeset="m:componentGrp"
							label="Add component group"
							origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression[1]/m:componentGrp"/>
						<xf:group ref="m:componentGrp">
							<dcm:create
								nodeset="m:expression"
								label="Add components"
								origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression[1]/m:componentGrp/m:expression[1]"/>
							<h:table class="element_list" cellspacing="0" cellpadding="0" border="0">
								<xf:repeat nodeset="m:expression" id="component-list1">
									<h:tr class="hoverclass">
										<h:td>
											<xf:group ref=".[@n!='']"><xf:output value="@n"/>.&#160;</xf:group>
											<xf:output 
												value="m:titleStmt/m:title"/><xf:group 
													ref=".[normalize-space(m:titleStmt/m:title[1]) and normalize-space(m:tempo)]">. </xf:group>
											<xf:output value="m:tempo"/>
											<xf:group ref=".[normalize-space(concat(@n,m:titleStmt/m:title[1],m:tempo))='']"> 
												[No number, title or tempo] 
											</xf:group>
											&#160;
										</h:td>
										<h:td style="text-align:right;">
											<xf:group ref=".[instance('temp')/file_exists='true']">
												<xf:trigger appearance="minimal">
													<xf:label><h:img src="{instance('parameters')/dcm:server_name}/editor/images/edit.gif" title="Open component editor"/></xf:label>
													<xf:action ev:event="DOMActivate">
														<xf:var name="uri" 
															select="concat(instance('parameters')/dcm:orbeon_dir,'?uri=',instance('parameters')/dcm:form_home,'details-expression.xml&amp;doc=',instance('parameters')/dcm:xml_file,'&amp;id=',@xml:id)"/>
														<xf:action if="instance('temp')/changed='true'">
															<xf:setvalue ref="instance('temp')/target_uri" value="$uri"/>
															<xxf:show dialog="exit-warning-dialog"/>
														</xf:action>	
														<xf:action if="instance('temp')/changed='false'">
															<xf:load resource="{$uri}" show="replace"/>
														</xf:action>
													</xf:action>
												</xf:trigger>
											</xf:group>
											<xf:group ref=".[instance('temp')/file_exists!='true']">
												<h:small>File must be saved before components can be edited</h:small>
											</xf:group>
										</h:td>
										<h:td class="buttons_cell" style="text-align:right; white-space:nowrap;">
											
											<h:img src="{instance('parameters')/dcm:server_name}/editor/images/arrow_left_disabled.png" class="button_patch"/>
											
											<xf:var name="tooManySublevels" select="m:componentGrp/m:expression/m:componentGrp/m:expression"/> 
											<xf:var name="expTarget" select="preceding-sibling::m:expression[1][not($tooManySublevels)]"/>
											<xf:group ref=".[not($expTarget)]">
												<h:img src="{instance('parameters')/dcm:server_name}/editor/images/arrow_right_disabled.png" class="button_patch"/><xf:output value="''"/>
											</xf:group>
											<xf:trigger appearance="minimal" ref=".[$expTarget]">
												<xf:label><h:img src="{instance('parameters')/dcm:server_name}/editor/images/arrow_right.png" alt="move right" title="Make this a sub-component (child) of the above"/></xf:label>
												<xf:action ev:event="DOMActivate">
													<xf:var name="expOrig" select="."/>
													<xf:action if="not($expTarget/m:componentGrp)">
														<!-- insert <componentGrp> if it doesn't exist -->
														<xf:var name="origin" select="instance('reduced-template')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression/m:componentGrp"/>
														<xf:insert context="$expTarget" origin="$origin" nodeset="m:componentGrp" at="1" position="before"/>
														<!-- move the componentGrp into place according to the empty model if necessary-->
														<xf:var name="emptyDocExp" select="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression/m:componentGrp"/>
														<xf:action while="$emptyDocExp/preceding-sibling::*[local-name()=local-name($expTarget/m:componentGrp/following-sibling::*[1])]
															and count($expTarget/m:componentGrp/preceding-sibling::*)+1 &lt; count($expTarget/*)">
															<xf:var name="pos" select="count($expTarget/m:componentGrp/preceding-sibling::*)+1"/>
															<xf:insert context="$expTarget" origin="m:componentGrp"
																nodeset="*" at="$pos+1" position="after"/>
															<xf:delete context="$expTarget" nodeset="*" at="$pos"/>	
														</xf:action>
													</xf:action>
													<xf:insert context="$expTarget/m:componentGrp" nodeset="m:expression" origin="$expOrig"/>
													<xf:delete context="." nodeset="." at="index('component-list1')"/>
												</xf:action>
											</xf:trigger>
											
											<dcm:element-buttons triggers="up down copy add remove" nodeset="m:expression" index="component-list1" 
												origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression/m:componentGrp/m:expression"/>
											<dcm:id/>
											<dcm:attribute-editor/>
										</h:td>
									</h:tr>
									
									<!-- 1st sub-level -->
									<h:tr>
										<h:td colspan="3">
											<xf:group ref="m:componentGrp">
												<h:table class="sub_element_list" cellspacing="0" cellpadding="0" border="0">
													<xf:repeat nodeset="m:expression" id="component-list2">
														<h:tr class="hoverclass">
															<h:td class="tree_cell">
																<xf:group ref=".[count(following-sibling::*)=0]">
																	<h:img class="tree" src="{instance('parameters')/dcm:server_name}/editor/images/tree-1.png" alt="sub-element"></h:img>&#160;
																</xf:group>
																<xf:group ref=".[count(following-sibling::*)!=0]">
																	<h:img class="tree" src="{instance('parameters')/dcm:server_name}/editor/images/tree-2.png" alt="sub-element"></h:img>&#160;
																</xf:group>
															</h:td>
															<h:td>
																<xf:group ref=".[@n!='']"><xf:output value="@n"/>.&#160;</xf:group>
																<xf:output value="m:titleStmt/m:title[1]"/><xf:group
																	ref=".[normalize-space(m:titleStmt/m:title[1]) and normalize-space(m:tempo)]">. </xf:group>
																<xf:output value="m:tempo"/>
																<xf:group ref=".[normalize-space(concat(@n,m:titleStmt/m:title[1],m:tempo))='']"> 
																	[No number, title or tempo] 
																</xf:group>
																&#160;
															</h:td>
															<h:td style="text-align:right;">
																<xf:group ref=".[instance('temp')/file_exists='true']">
																	<xf:trigger appearance="minimal">
																		<xf:label><h:img src="{instance('parameters')/dcm:server_name}/editor/images/edit.gif" title="Open component editor"/></xf:label>
																		<xf:action ev:event="DOMActivate">
																			<xf:var name="uri" 
																				select="concat(instance('parameters')/dcm:orbeon_dir,'?uri=',instance('parameters')/dcm:form_home,'details-expression.xml&amp;doc=',instance('parameters')/dcm:xml_file,'&amp;id=',@xml:id)"/>
																			<xf:action if="instance('temp')/changed='true'">
																				<xf:setvalue ref="instance('temp')/target_uri" value="$uri"/>
																				<xxf:show dialog="exit-warning-dialog"/>
																			</xf:action>	
																			<xf:action if="instance('temp')/changed='false'">
																				<xf:load resource="{$uri}" show="replace"/>
																			</xf:action>
																		</xf:action>
																	</xf:trigger>
																</xf:group>
																<xf:group ref=".[instance('temp')/file_exists!='true']">
																	<h:small>File must be saved before components can be edited</h:small>
																</xf:group>
															</h:td>
															<h:td class="buttons_cell" style="text-align:right; white-space: nowrap;">
																
																<xf:trigger appearance="minimal">
																	<xf:label><h:img src="{instance('parameters')/dcm:server_name}/editor/images/arrow_left.png" alt="move left" title="Move up one level"/></xf:label>
																	<xf:action ev:event="DOMActivate">
																		<xf:var name="origin" select="."/>
																		<xf:insert context="../../../../m:componentGrp" origin="$origin" nodeset="*" at="index('component-list1')" position="after"/>
																		<xf:delete nodeset="."/>
																	</xf:action>
																</xf:trigger>
																
																<xf:var name="tooManySublevels" select="m:componentGrp/m:expression"/> 
																<xf:var name="expTarget" select="preceding-sibling::m:expression[1][not($tooManySublevels)]"/>
																<xf:group ref=".[not($expTarget)]">
																	<h:img src="{instance('parameters')/dcm:server_name}/editor/images/arrow_right_disabled.png" class="button_patch"/><xf:output value="''"/>
																</xf:group>
																<xf:trigger appearance="minimal" ref=".[$expTarget]">
																	<xf:label><h:img src="{instance('parameters')/dcm:server_name}/editor/images/arrow_right.png" alt="move right" title="Make this a sub-component (child) of the above"/></xf:label>
																	<xf:action ev:event="DOMActivate">
																		<xf:var name="expOrig" select="."/>
																		<xf:action if="not($expTarget/m:componentGrp)">
																			<!-- insert <componentGrp> if it doesn't exist -->
																			<xf:var name="origin" select="instance('reduced-template')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression/m:componentGrp"/>
																			<xf:insert context="$expTarget" origin="$origin" nodeset="m:componentGrp" at="1" position="before"/>
																			<!-- move the componentGrp into place according to the empty model if necessary-->
																			<xf:var name="emptyDocExp" select="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression/m:componentGrp"/>
																			<xf:action while="$emptyDocExp/preceding-sibling::*[local-name()=local-name($expTarget/m:componentGrp/following-sibling::*[1])]
																				and count($expTarget/m:componentGrp/preceding-sibling::*)+1 &lt; count($expTarget/*)">
																				<xf:var name="pos" select="count($expTarget/m:componentGrp/preceding-sibling::*)+1"/>
																				<xf:insert context="$expTarget" origin="m:componentGrp"
																					nodeset="*" at="$pos+1" position="after"/>
																				<xf:delete context="$expTarget" nodeset="*" at="$pos"/>	
																			</xf:action>
																		</xf:action>
																		<xf:insert context="$expTarget/m:componentGrp" nodeset="m:expression" origin="$expOrig"/>
																		<xf:delete context="." nodeset="." at="index('component-list1')"/>
																	</xf:action>
																</xf:trigger>
																
																<dcm:element-buttons triggers="up down copy add remove" nodeset="m:expression" index="component-list2" 
																	origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression/m:componentGrp/m:expression"/>
																<dcm:id/>
																<dcm:attribute-editor/>
															</h:td>
														</h:tr>
														
														<!-- 2nd sub-level -->
														<h:tr>
															<h:td colspan="4">
																<xf:group ref="m:componentGrp">
																	<h:table class="sub_element_list" cellspacing="0" cellpadding="0" border="0">
																		<xf:repeat nodeset="m:expression" id="component-list3">
																			<h:tr class="hoverclass">
																				<h:td class="tree_cell">
																					<xf:group ref=".[count(../../following-sibling::*)!=0]">
																						<h:img class="tree" src="{instance('parameters')/dcm:server_name}/editor/images/tree-3.png" alt="sub-element"/>
																					</xf:group>
																					<xf:group ref=".[count(../../following-sibling::*)=0]">
																						<h:img class="tree" src="{instance('parameters')/dcm:server_name}/editor/images/spacer.png" width="22" alt="spacer"/>
																					</xf:group>
																				</h:td>
																				<h:td class="tree_cell">
																					<xf:group ref=".[count(following-sibling::*)=0]">
																						<h:img class="tree" src="{instance('parameters')/dcm:server_name}/editor/images/tree-1.png" alt="sub-element"/>
																					</xf:group>
																					<xf:group ref=".[count(following-sibling::*)!=0]">
																						<h:img class="tree" src="{instance('parameters')/dcm:server_name}/editor/images/tree-2.png" alt="sub-element"/>
																					</xf:group>
																				</h:td>
																				<h:td>
																					<xf:group ref=".[@n!='']"><xf:output value="@n"/>.&#160;</xf:group>
																					<xf:output value="m:titleStmt/m:title[1]"/><xf:group
																						ref=".[normalize-space(m:titleStmt/m:title[1]) and normalize-space(m:tempo)]">. </xf:group>
																					<xf:output value="m:tempo"/>
																					<xf:group ref=".[normalize-space(concat(@n,m:titleStmt/m:title[1],m:tempo))='']">
																						[No number, title or tempo] 
																					</xf:group>
																					&#160;
																				</h:td>
																				<h:td style="text-align:right;">
																					<xf:group ref=".[instance('temp')/file_exists='true']">
																						<xf:trigger appearance="minimal">
																							<xf:label><h:img src="{instance('parameters')/dcm:server_name}/editor/images/edit.gif" title="Open component editor"/></xf:label>
																							<xf:action ev:event="DOMActivate">
																								<xf:var name="uri" 
																									select="concat(instance('parameters')/dcm:orbeon_dir,'?uri=',instance('parameters')/dcm:form_home,'details-expression.xml&amp;doc=',instance('parameters')/dcm:xml_file,'&amp;id=',@xml:id)"/>
																								<xf:action if="instance('temp')/changed='true'">
																									<xf:setvalue ref="instance('temp')/target_uri" value="$uri"/>
																									<xxf:show dialog="exit-warning-dialog"/>
																								</xf:action>	
																								<xf:action if="instance('temp')/changed='false'">
																									<xf:load resource="{$uri}" show="replace"/>
																								</xf:action>
																							</xf:action>
																						</xf:trigger>
																					</xf:group>
																					<xf:group ref=".[instance('temp')/file_exists!='true']">
																						<h:small>File must be saved before components can be edited</h:small>
																					</xf:group>
																				</h:td>
																				<h:td class="buttons_cell" style="text-align:right; white-space: nowrap;">
																					
																					<xf:trigger appearance="minimal">
																						<xf:label><h:img src="{instance('parameters')/dcm:server_name}/editor/images/arrow_left.png" alt="move left" title="Move up one level"/></xf:label>
																						<xf:action ev:event="DOMActivate">
																							<xf:var name="origin" select="."/>
																							<xf:insert context="../../../../m:componentGrp" origin="$origin" nodeset="*" at="index('component-list2')" position="after"/>
																							<xf:delete nodeset="."/>
																						</xf:action>
																					</xf:trigger>
																					
																					<h:img src="{instance('parameters')/dcm:server_name}/editor/images/arrow_right_disabled.png" class="button_patch"/>
																					
																					<dcm:element-buttons triggers="up down copy add remove" nodeset="m:expression" index="component-list3" 
																						origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression/m:componentGrp/m:expression"/>
																					<dcm:id/>
																					<dcm:attribute-editor/>
																				</h:td>
																			</h:tr>
																		</xf:repeat>
																	</h:table>
																</xf:group>
															</h:td>
														</h:tr>
														<!-- end 2nd sub-level -->
														
													</xf:repeat>
												</h:table>
											</xf:group>
										</h:td>
									</h:tr>
									<!-- end 1st sub-level -->
									
								</xf:repeat>
							</h:table>
						</xf:group>
					</h:fieldset>
					
				</h:fieldset>
				
				<h:div class="vertical_spacer"/>
				<h:div class="vertical_spacer"/>
				
			</xf:repeat>
			
		</xf:group>
		
	</h:div>
	<xi:include href="includes/relation-dialog.xml" parse="xml"/>
	<xi:include href="includes/code-inspector.xml" parse="xml"/>
	<h:br clear="all"/>
	
</h:div>
