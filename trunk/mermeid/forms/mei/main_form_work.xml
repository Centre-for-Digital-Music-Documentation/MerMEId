<?xml version="1.0" encoding="UTF-8" ?>
<h:div id="work-div" 
	xmlns:h="http://www.w3.org/1999/xhtml"
	xmlns:xf="http://www.w3.org/2002/xforms" 
	xmlns:xxf="http://orbeon.org/oxf/xml/xforms"
	xmlns:fr="http://orbeon.org/oxf/xml/form-runner"
	xmlns:ev="http://www.w3.org/2001/xml-events"
	xmlns:m="http://www.music-encoding.org/ns/mei" 
	xmlns:xi="http://www.w3.org/2001/XInclude"
	xmlns:opensearch="http://a9.com/-/spec/opensearch/1.1/"
	xmlns:dcm="http://www.kb.dk/dcm">
	
	<h:div class="inputdiv">
		
		<xf:group ref=".[not(instance('data-instance')/m:meiHead/m:workDesc/m:work)]">
			<h:div class="vertical_spacer"/>
			<dcm:create ref="instance('data-instance')/m:meiHead"
				nodeset="m:workDesc"
				label="Add basic work metadata"
				origin="instance('reduced-template')/m:meiHead/m:workDesc"/>
			<dcm:create ref="instance('data-instance')/m:meiHead/m:workDesc"
				nodeset="m:work"
				label="Add basic work metadata"
				origin="instance('reduced-template')/m:meiHead/m:workDesc/m:work"/>
		</xf:group>
		
		<xf:group ref=".[instance('data-instance')/m:meiHead/m:workDesc/m:work]">
			
			<h:fieldset>
				<h:legend>Titles</h:legend>
				<xf:group ref="instance('data-instance')/m:meiHead/m:workDesc/m:work/m:titleStmt"
					id="repeat-title">
					<h:div class="blocklabel">Main title </h:div>
					<dcm:create
						nodeset="m:title[not(@type) or @type='main']"
						label="Add main title"
						origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:titleStmt/m:title[not(@type)]"/>
					
					<xf:repeat nodeset="m:title[not(@type) or @type='main']" id="main_titles" class="input_group">
						<h:div>
							<xi:include href="includes/input_with_xmllang.xml" parse="xml"/>&#160;
							<dcm:element-buttons-typed 
								triggers="all" 
								nodeset="m:title[@type='main' or not(@type)]" 
								index="main_titles"
								origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:titleStmt/m:title[not(@type)]"/>
							<dcm:attribute-editor ref="."/>
						</h:div>
					</xf:repeat>
					
					<xf:group ref=".[m:title[@type='alternative']]">
						<h:div class="blocklabel">Alternative title</h:div>
					</xf:group>
					<xf:repeat nodeset="m:title[@type='alternative']" id="alternative_titles" class="input_group">
						<h:div>
							<xi:include href="includes/input_with_xmllang.xml" parse="xml"/>&#160;
							<dcm:element-buttons-typed 
								triggers="up down move copy add remove" 
								nodeset="m:title[@type='alternative']" 
								index="alternative_titles"
								origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:titleStmt/m:title[@type='alternative']"/>
							<dcm:attribute-editor ref="."/>
						</h:div>
					</xf:repeat>	
					
					<xf:group ref=".[m:title[@type='subordinate']]">
						<h:div class="blocklabel">Subtitle</h:div>
					</xf:group>
					<xf:repeat nodeset="m:title[@type='subordinate']" id="subtitles" class="input_group">
						<h:div>
							<xi:include href="includes/input_with_xmllang.xml" parse="xml"/>&#160;
							<dcm:element-buttons-typed 
								triggers="up down move copy add remove" 
								nodeset="m:title[@type='subordinate']" 
								index="subtitles"
								origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:titleStmt/m:title[@type='subordinate']"/>
							<dcm:attribute-editor ref="."/>
						</h:div>
					</xf:repeat>
					
					<xf:group ref=".[m:title[@type='uniform']]">
						<h:div class="blocklabel">Uniform title</h:div>
					</xf:group>
					<xf:repeat nodeset="m:title[@type='uniform']" id="uniform_titles" class="input_group">
						<h:div>
							<xi:include href="includes/input_with_xmllang.xml" parse="xml"/>&#160;
							<dcm:element-buttons-typed 
								triggers="up down move copy add remove" 
								nodeset="m:title[@type='uniform']" 
								index="uniform_titles"
								origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:titleStmt/m:title[@type='uniform']"/>
							<dcm:attribute-editor ref="."/>
						</h:div>
					</xf:repeat>
					
					<xf:group ref=".[m:title[@type='original']]">
						<h:div class="blocklabel">Original title</h:div>
					</xf:group>
					<xf:repeat nodeset="m:title[@type='original']" id="original_titles" class="input_group">
						<h:div>
							<xi:include href="includes/input_with_xmllang.xml" parse="xml"/>&#160;
							<dcm:element-buttons-typed 
								triggers="up down move copy add remove" 
								nodeset="m:title[@type='original']" 
								index="original_titles"
								origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:titleStmt/m:title[@type='original']"/>
							<dcm:attribute-editor ref="."/>
						</h:div>
					</xf:repeat>
					
					<xf:group ref=".[m:title[@type='text_source']]">
						<h:div class="blocklabel">Text source
							<h:a class="help">?<h:span class="comment">The title of a textual source for a sung or 
								recited text used in the work, e.g. "Psalm 101"</h:span></h:a>
						</h:div>
					</xf:group>
					<xf:repeat nodeset="m:title[@type='text_source']" id="text_sources" class="input_group">
						<h:div>
							<xi:include href="includes/input_with_xmllang.xml" parse="xml"/>&#160;
							<dcm:element-buttons-typed 
								triggers="up down move copy add remove" 
								nodeset="m:title[@type='text_source']" 
								index="text_sources"
								origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:titleStmt/m:title[@type='text_source']"/>
							<dcm:attribute-editor ref="."/>
						</h:div>
					</xf:repeat>
					
					
					<xf:group ref=".[not(m:title[@type='alternative'] 
						and m:title[@type='subordinate'] 
						and	m:title[@type='uniform'] 
						and	m:title[@type='original'] 
						and	m:title[@type='text_source'])]">
						<h:div class="vertical_spacer"/>
						<h:a class="popup"><h:img src="/../editor/images/add.gif" title="Add more titles"/> Add more titles...<h:span 
							class="comment">
							<h:div style="text-align:center">
								<h:div>
									<dcm:create
										nodeset="m:title[@type='alternative']"
										label="Add alternative title"
										origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:titleStmt/m:title[@type='alternative']"/>
								</h:div>
								<h:div>
									<dcm:create
										nodeset="m:title[@type='subordinate']"
										label="Add subtitle"
										origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:titleStmt/m:title[@type='subordinate']"/>
								</h:div>
								<h:div>
									<dcm:create
										nodeset="m:title[@type='uniform']"
										label="Add uniform title"
										origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:titleStmt/m:title[@type='uniform']"/>
								</h:div>
								<h:div>
									<dcm:create
										nodeset="m:title[@type='original']"
										label="Add original title"
										origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:titleStmt/m:title[@type='original']"/>
								</h:div>
								<h:div>
									<dcm:create
										nodeset="m:title[@type='text_source']"
										label="Add title of text source"
										origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:titleStmt/m:title[@type='text_source']"/>
								</h:div>
							</h:div>
						</h:span></h:a>
					</xf:group>
					
				</xf:group>
			</h:fieldset>
			
			<h:fieldset>
				<h:legend>Identification</h:legend>
				<dcm:create ref="instance('data-instance')/m:meiHead/m:workDesc/m:work"
					nodeset="m:identifier"
					label="Add identifier"
					origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:identifier"/>
				<xf:group ref="instance('data-instance')/m:meiHead/m:workDesc/m:work/m:identifier">
					<h:div class="blocklabel">
						<h:span class="fixed_width"> List name <h:a class="help">?<h:span class="comment">Name of a
							list, catalogue or other numbering system in which the work is identified (e.g. "Opus",
							"CNW", "BWV", "Neue Mozart-Ausgabe" etc.)<h:br/>
							If the name matches the name of a file collection as defined at the "File" tab, 
							this identifier will be shown (like "BWV 1063" or "NMA II/3") next to the work's title on the file list; 
							it will also be used as a header in the HTML preview. 
						</h:span></h:a></h:span>
						<h:span class="fixed_width"> No. <h:a class="help">?<h:span class="comment">The work's number or
							signature in the list identifying it</h:span></h:a>
						</h:span>
					</h:div>
				</xf:group>
				<xf:repeat
					nodeset="instance('data-instance')/m:meiHead/m:workDesc/m:work/m:identifier"
					id="work-id-repeat">
					<h:div>					
						<xf:input ref="@type" class="mediumshort"/>
						<xf:input ref="." class="mediumshort"/>
						<dcm:element-buttons 
							triggers="add remove up down" 
							nodeset="m:identifier" 
							index="work-id-repeat"
							origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:identifier"/>
						<dcm:attribute-editor ref="."/>
					</h:div>
				</xf:repeat>
			</h:fieldset>
			
			<h:fieldset>
				<h:legend>Persons <h:a class="help">?<h:span class="comment">A list of person involved in the creation or transmission 
					of this work in general, such as the composer or text author</h:span></h:a></h:legend>		
				<dcm:create ref="instance('data-instance')/m:meiHead/m:workDesc/m:work/m:titleStmt/m:respStmt"
					nodeset="m:persName"
					label="Add person"
					origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:titleStmt/m:respStmt/m:persName"/>
				<dcm:create ref="instance('data-instance')/m:meiHead/m:workDesc/m:work/m:titleStmt"
					nodeset="m:respStmt"
					label="Add person"
					origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:titleStmt/m:respStmt"/>
				<!--<xf:group ref="instance('data-instance')/m:meiHead/m:workDesc/m:work/m:titleStmt/m:respStmt[m:persName[count(@role)&gt;0 and @role!='']]">-->
				<xf:group ref="instance('data-instance')/m:meiHead/m:workDesc/m:work/m:titleStmt/m:respStmt">
					<xf:group ref="m:persName">
						<h:div class="blocklabel">
							<h:span class="fixed_width_long">Name</h:span>
							<h:span class="fixed_width"> Relation <h:a class="help">?<h:span class="comment">Specifies the person's relation to the item, e.g. "Composer"
								or "Author". The list is based on MARC relators as defined at http://id.loc.gov/vocabulary/relators</h:span></h:a>
							</h:span>
						</h:div>
					</xf:group>
					<xf:repeat nodeset="m:persName" id="relators-repeat">
						<dcm:relator ref="."/>
						<dcm:element-buttons 
							triggers="add remove up down" 
							nodeset="m:persName" 
							index="relators-repeat"
							origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:titleStmt/m:respStmt/m:persName[1]"/>
						<dcm:attribute-editor ref="."/>
						<h:br/>
					</xf:repeat>
				</xf:group>
			</h:fieldset>
			
			<xf:group ref="instance('data-instance')/m:meiHead/m:workDesc/m:work">
				<h:fieldset>
					<h:legend>Work notes</h:legend>
					<h:div class="vertical_spacer"/>
					<dcm:create 
						nodeset="m:notesStmt"
						label="Add work description"
						origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:notesStmt"/>
					<xf:group ref="m:notesStmt">
						<dcm:create 
							nodeset="m:annot[@type='general_description']"
							label="Add work description"
							origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:notesStmt/m:annot[@type='general_description']"/>
						<xf:repeat nodeset="m:annot[@type='general_description']" id="repeat_work_description">
							<h:div style="white-space:nowrap">
								<xf:textarea ref="." class="notes"  mediatype="text/html">
									<xf:label class="blocklabel">General work description 
										<h:a class="help">?<h:span class="comment">A general description of or introduction to the work</h:span></h:a>
									</xf:label>
								</xf:textarea>
								
								<!-- tinyMCE -->
								<!--<fr:tinymce ref="."/>-->
								
								<dcm:element-buttons-typed triggers="remove" 
									index="repeat_work_description" 
									nodeset="m:annot[@type='general_description']" 
									origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:notesStmt/m:annot[@type='general_description']"/>
								<dcm:attribute-editor ref="."/>
							</h:div>
						</xf:repeat>
						<h:div class="blocklabel">External descriptions <h:a class="help">?<h:span class="comment"
							>Links to external resources (web pages, PDF files etc.) about
							the work in general - not about a particular
							source</h:span></h:a></h:div>
						<dcm:create 
							nodeset="m:annot[@type='links']"
							label="Add link"
							origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:notesStmt/m:annot[@type='links']"/>
						<dcm:create ref="m:annot[@type='links']"
							nodeset="m:ptr"
							label="Add link"
							origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:notesStmt/m:annot[@type='links']/m:ptr"/>
						<xf:group ref="m:annot[@type='links']">
							<xf:repeat nodeset="m:ptr" id="general-notesstmt-annot-repeat-ptr">
								<h:div>
									<xf:input ref="@target" class="long">
										<xf:label>URI <h:a class="help">?<h:span class="comment">Link to the
											resource, e.g. "http://example.com/preface.pdf"</h:span></h:a>
										</xf:label>
									</xf:input>
									<xf:input ref="@label">
										<xf:label>Label <h:a class="help">?<h:span class="comment">A short, 
											descriptive text which may serve
											as the link text, e.g. "CNU preface"</h:span></h:a></xf:label>
									</xf:input>
									<dcm:element-buttons 
										triggers="up down copy add remove" 
										nodeset="m:ptr" 
										index="general-notesstmt-annot-repeat-ptr"
										origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:notesStmt/m:annot[@type='links']/m:ptr"/>
									<dcm:attribute-editor ref="."/>
								</h:div>
							</xf:repeat>
						</xf:group>
					</xf:group>
				</h:fieldset>
			</xf:group>
			
			<xf:group ref="instance('data-instance')/m:meiHead/m:workDesc/m:work">
				<h:fieldset>
					<h:legend>Relations <h:a class="help">?<h:span class="comment">Relations between this work and 
						other works or files may be specified here to create links between them.<h:br/>
						For instance, if this work is also part of a larger work or a collection of works 
						defined in a different file, a link pointing to the external file may be defined here with the 
						relation "is part of". <h:br/>
						In the other file, conversely, a link pointing to this one and defining the relation as "has part"
						may be defined.
					</h:span></h:a></h:legend>
					<dcm:create 
						nodeset="m:relationList"
						label="Add relation"
						origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:relationList"/>
					<h:table class="element_list" cellspacing="0" cellpadding="0" border="0">
						<xf:repeat nodeset="m:relationList/m:relation" id="work_relations">
							<h:tr>
								<h:td>
									<h:span>This work </h:span>
									<xi:include href="includes/relation_select.xml" parse="xml"/>
									<xf:group ref="@target[normalize-space()='']">
										<xf:trigger>
											<xf:label>Select file...</xf:label>
											<xf:action ev:event="DOMActivate">
												<xxf:show dialog="relation_dialog"/>
												<xf:setvalue ref="instance('temp')/target_uri" value="concat(instance('parameters')/dcm:server_name,'storage/cross-link.xq?get=works')"/>
												<xf:send submission="load-fileList"/>
											</xf:action>
										</xf:trigger>
									</xf:group>
									<xf:group ref="@target[normalize-space()]">
										<xf:output value="."/>
										<xf:trigger appearance="minimal">
											<xf:label><h:span style="vertical-align:bottom;"><h:img src="/../editor/images/go_to_link.png" 
												title="Go to linked resource"/></h:span></xf:label>
											<xf:action ev:event="DOMActivate">
												<xxf:variable name="uri" 
													select="concat(
													instance('parameters')/dcm:orbeon_dir,
													'?uri=',
													instance('parameters')/dcm:form_home,
													'edit-work-case.xml&amp;doc=',.)"/>
												<xf:setvalue ref="instance('temp')/target_uri" value="$uri"/>
												<xxf:show dialog="leave-warning-dialog"></xxf:show>
											</xf:action>
										</xf:trigger>
									</xf:group>
								</h:td>
								<h:td>
									<xf:input ref="@label" class="long">
										<xf:label> Label <h:a class="help">?<h:span class="comment">The text to be 
											displayed as the link text (usually the title of the linked item)</h:span></h:a></xf:label>
									</xf:input>
								</h:td>
								<h:td style="vertical-align:top; white-space:nowrap;">
									<h:span class="editmenu">
										<dcm:element-buttons 
											triggers="up down add del-parent-with-last" 
											nodeset="m:relation" 
											index="work_relations"
											origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:relationList/m:relation"/>
										<dcm:attribute-editor ref="."/>
									</h:span>
								</h:td>
							</h:tr>
						</xf:repeat>
					</h:table>
				</h:fieldset>
			</xf:group>
			
			
			<xf:group ref="instance('data-instance')/m:meiHead/m:workDesc/m:work/m:classification">
				<h:fieldset>
					<h:legend>Classification and keywords</h:legend>
					<h:span class="blocklabel">Term <h:a class="help">?<h:span class="comment">Keywords for searching, 
						grouping and indexing, e.g.	"Symphony", "Chamber music", or "Song".
						Pre-defined categories and keywords may be selected from a menu by clicking the add-button to the right.
					</h:span></h:a></h:span>
					<h:div style="float:right">
						<xf:trigger>
							<xf:label><h:img src="/../editor/images/list.png" alt="Add"/> Add from list</xf:label>
							<xxf:show dialog="keywords_menu" ev:event="DOMActivate"/>
						</xf:trigger>
					</h:div>
					<!-- follows: a copy of the create-button code -->
					<xf:group ref=".[not(m:termList)]">
						<xf:trigger class="create_button" id="termList-create">
							<xf:label><h:img src="/../editor/images/add.gif" alt="Add" title="Add term"/> Add term</xf:label>
							<xf:action ev:event="DOMActivate">
								<xxf:variable name="origin" select="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:classification/m:termList"/>
								<xf:insert context="." 
									origin="$origin" 
									nodeset="m:termList"/>
								<xf:action if="*[local-name(.)='termList']/following-sibling::*[local-name()!='termList']">
									<xxf:variable name="following-name" select="local-name(*[local-name(.)='termList'][1]/following-sibling::*[local-name()!='termList'][1])"/>
									<xxf:variable name="parent_nodeset" select="."/>
									<xf:action while="$origin/preceding-sibling::*[local-name()=local-name($parent_nodeset/*[local-name(.)='termList']/following-sibling::*[local-name()!='termList'][1])] 
										and count($parent_nodeset/*[local-name(.)='termList']/preceding-sibling::*)+1 &lt; count($parent_nodeset/*)">
										<xxf:variable name="pos" select="count(*[local-name(.)='termList']/preceding-sibling::*)+1"/>
										<xf:insert origin="../*[$pos]"
											nodeset="*" at="$pos+1"/>
										<xf:delete nodeset="*" at="$pos"/>
									</xf:action>
								</xf:action>
								<xf:dispatch name="id-update" target="form-group"/>
							</xf:action>
						</xf:trigger>
					</xf:group>
					
					<xf:repeat nodeset="m:termList/m:term" id="repeat-work-terms">
						<h:div>
							<xf:input ref="." class="long"/>
							<dcm:element-buttons 
								triggers="add del-parent-with-last up down" 
								nodeset="m:term" 
								index="repeat-work-terms"
								origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:classification/m:termList/m:term"/>
							<dcm:attribute-editor ref="."/>
						</h:div>
					</xf:repeat>
				</h:fieldset>
				
			</xf:group>
			
		</xf:group>
		
	</h:div>
	
	<xi:include href="includes/code-inspector.xml" parse="xml"/>
	<h:br clear="all"/>
	
	
	<!-- pre-defined keywords menu -->
	<xxf:dialog id="keywords_menu" appearance="full" level="modeless"
		close="true" draggable="true" visible="false">
		<xf:action ev:event="check-for-termlist">
			<xf:action if="not(instance('data-instance')/m:meiHead/m:workDesc/m:work/m:classification/m:termList)">
				<xf:dispatch name="DOMActivate" target="termList-create"/>
				<xf:delete nodeset="instance('data-instance')/m:meiHead/m:workDesc/m:work/m:classification/m:termList/m:term"/>
			</xf:action>
		</xf:action>
		<xf:label>Keywords</xf:label>
		<h:div style="height:100%">
			<h:div class="strong">
				Systematic keywords
			</h:div>										
			<h:table class="popup_menu_table" cellpadding="0" cellspacing="0" border="0">
				<xf:repeat nodeset="instance('keywords-instance')/m:termList[@label='level1']" id="level1_keywords-repeat">
					<tr>
						<td style="vertical-align:top;border-bottom: 1px solid #999; margin:0; padding:5px;">
							<!-- level 1 keywords  -->
							<xf:trigger submission="replace-form-with" appearance="minimal">
								<xf:label><h:img src="/../editor/images/add.gif" alt="Add"/> <xf:output ref="m:term"/></xf:label>
								<xf:action ev:event="DOMActivate">
									<xf:dispatch name="check-for-termlist" target="keywords_menu"/>
									<!-- insert new node -->
									<xf:action ref="instance('data-instance')/m:meiHead/m:workDesc/m:work/m:classification/m:termList[m:term[1][.!=''] or not(m:term)]">
										<xf:insert context="instance('data-instance')/m:meiHead/m:workDesc/m:work/m:classification/m:termList" 
											nodeset="m:term" 
											at="last()"
											position="after" 
											origin="instance('keywords-instance')/m:termList[@label='level1'][index('level1_keywords-repeat')]/m:term"/>
									</xf:action>
									<!-- or write values to existing, empty node -->
									<xf:action ref="instance('data-instance')/m:meiHead/m:workDesc/m:work/m:classification/m:termList/m:term[1][.='']">
										<xf:setvalue ref="." 
											value="instance('keywords-instance')/m:termList[@label='level1'][index('level1_keywords-repeat')]/m:term"/>
									</xf:action>
								</xf:action>
							</xf:trigger>
						</td>
						<td style="vertical-align:top;border-bottom: 1px solid #999; margin:0; padding:5px;">
							<!-- level 2 keywords --> 
							<xf:repeat nodeset="following-sibling::m:termList[1]/m:term" id="level2_keywords-repeat">
								<xf:trigger submission="replace-form-with" appearance="minimal">
									<xf:label><h:img src="/../editor/images/add.gif" alt="Add"/> <xf:output ref="."/></xf:label>
									<xf:action ev:event="DOMActivate">
										<xf:dispatch name="check-for-termlist" target="keywords_menu"/>
										<xf:action ref="instance('data-instance')/m:meiHead/m:workDesc/m:work/m:classification/m:termList[m:term[1][.!=''] or not(m:term)]">
											<xf:insert context="instance('data-instance')/m:meiHead/m:workDesc/m:work/m:classification/m:termList" 
												nodeset="m:term" 
												at="last()"
												position="after" 
												origin="instance('keywords-instance')/m:termList[@label='level1'][index('level1_keywords-repeat')]/following-sibling::m:termList[1]/m:term[index('level2_keywords-repeat')]"/>
										</xf:action>														
										<xf:action ref="instance('data-instance')/m:meiHead/m:workDesc/m:work/m:classification/m:termList/m:term[1][.='']">
											<xf:setvalue ref="." 
												value="instance('keywords-instance')/m:termList[@label='level1'][index('level1_keywords-repeat')]/following-sibling::m:termList[1]/m:term[index('level2_keywords-repeat')]"/>
										</xf:action>
									</xf:action>
								</xf:trigger>
								<h:br clear="all"/>
							</xf:repeat>
						</td>
					</tr>
				</xf:repeat>
			</h:table>
			<h:br/>
			<h:div class="strong">
				Other keywords
			</h:div>
			<h:table style="width:370px;">
				<h:tr>
					<h:td style="vertical-align:top">
						<xf:repeat nodeset="instance('keywords-instance')/m:termList[@label='keywords']/m:term" id="additional_keywords-repeat">
							<span style="float:left; width: 120px;">
								<xf:trigger submission="replace-form-with" appearance="minimal">
									<xf:label><h:img src="/../editor/images/add.gif" alt="Add"/> <xf:output ref="."/></xf:label>
									<xf:action ev:event="DOMActivate">
										<xf:dispatch name="check-for-termlist" target="keywords_menu"/>
										<xf:action ref="instance('data-instance')/m:meiHead/m:workDesc/m:work/m:classification/m:termList[m:term[1][.!=''] or not(m:term)]">
											<xf:insert context="instance('data-instance')/m:meiHead/m:workDesc/m:work/m:classification/m:termList" 
												nodeset="m:term" 
												at="last()"
												position="after" 
												origin="instance('keywords-instance')/m:termList[@label='keywords']/m:term[index('additional_keywords-repeat')]"/>
										</xf:action>
										<xf:action ref="instance('data-instance')/m:meiHead/m:workDesc/m:work/m:classification/m:termList/m:term[1][.='']">
											<xf:setvalue ref="." 
												value="instance('keywords-instance')/m:termList[@label='keywords']/m:term[index('additional_keywords-repeat')]"/>
										</xf:action>
									</xf:action>
								</xf:trigger>
							</span>
						</xf:repeat>
					</h:td>
				</h:tr>
			</h:table>
		</h:div>
	</xxf:dialog>	
	
	<xxf:dialog id="relation_dialog" appearance="full">
		<xf:label>Select file to link to</xf:label>
		<xf:select1 ref="instance('temp')/series" class="mediumshort">
			<xf:label>Series:</xf:label>
			<xf:action ev:event="DOMActivate xforms-value-changed">
				<xf:setvalue ref="instance('temp')/page" value="1"/>
				<xf:dispatch name="send-query" target="source_search"></xf:dispatch>
			</xf:action>
			<xf:item>
				<xf:label>[ All ]</xf:label>
				<xf:value/>
			</xf:item>
			<xf:itemset nodeset="instance('XMLfiles')/dcm:collections/dcm:collection">
				<xf:label><xf:output value="."/></xf:label>
				<xf:value><xf:output value="."/></xf:value>
			</xf:itemset>
		</xf:select1> &#160;&#160;&#160;&#160;
		<xf:input ref="instance('temp')/query">
			<xf:label>Keywords <h:a class="help">?<span class="comment search" 
				style="width: 350px">
				Narrow your search by adding keywords, e.g. part of the title.<h:br/>
				Search is case insensitive. 
				Search terms may be combined using boolean operators. Wildcards allowed. Some examples:<br/>
				<span class="help_table">
					<span class="help_example">
						<span class="help_label">carl or nielsen</span>
						<span class="help_value">Boolean OR (default)</span>
					</span>                        
					<span class="help_example">
						<span class="help_label">carl and nielsen</span>
						<span class="help_value">Boolean AND</span>
					</span>
					<span class="help_example">
						<span class="help_label">"carl nielsen"</span>
						<span class="help_value">Exact phrase</span>
					</span>
					<span class="help_example">
						<span class="help_label">niels*</span>
						<span class="help_value">Match any number of characters. Finds Niels, Nielsen and Nielsson</span>
					</span>
					<span class="help_example">
						<span class="help_label">niels?n</span>
						<span class="help_value">Match 1 character. Finds Nielsen and Nielson, but not Nielsson</span>
					</span>
				</span>
			</span></h:a>:
			</xf:label>
		</xf:input>
		<xf:trigger id="source_search">
			<xf:label>Search</xf:label>
			<xf:action ev:event="DOMActivate">
				<xf:setvalue ref="instance('temp')/page" value="1"/>
			</xf:action>
			<xf:action ev:event="DOMActivate send-query">
				<xf:setvalue ref="instance('temp')/target_uri" 
					value="concat(
					instance('parameters')/dcm:server_name,
					'storage/cross-link.xq?get=works&amp;query=',instance('temp')/query,
					'&amp;subject=',instance('temp')/series,
					'&amp;page=',instance('temp')/page)"/>
				<xf:send submission="load-fileList"/>
			</xf:action>
		</xf:trigger>
		<xxf:variable name="page" select="floor(instance('XMLfiles')/opensearch:startIndex div instance('XMLfiles')/opensearch:itemsPerPage)+1"/>
		<xxf:variable name="max_page" select="floor(instance('XMLfiles')/opensearch:totalResults div instance('XMLfiles')/opensearch:itemsPerPage)+1"/>
		<h:p>Found <xf:output value="instance('XMLfiles')/opensearch:totalResults"/> record(s).
			<xf:group ref=".[$max_page &gt; 1]">
				Displaying page <xf:output value="$page"/> of <xf:output value="$max_page"/>.
			</xf:group>
			<xf:trigger ref=".[$page &gt; 1]">
				<xf:label>&lt;&lt;</xf:label>
				<xf:action ev:event="DOMActivate">
					<xf:setvalue ref="instance('temp')/page" 
						value="floor(instance('XMLfiles')/opensearch:startIndex div instance('XMLfiles')/opensearch:itemsPerPage)"/>
					<xf:dispatch name="send-query" target="source_search"></xf:dispatch>
				</xf:action>
			</xf:trigger>
			<xf:trigger ref=".[$page &lt; $max_page]">
				<xf:label>&gt;&gt;</xf:label>
				<xf:action ev:event="DOMActivate">
					<xf:setvalue ref="instance('temp')/page" 
						value="floor(instance('XMLfiles')/opensearch:startIndex div instance('XMLfiles')/opensearch:itemsPerPage)+2"/>
					<xf:dispatch name="send-query" target="source_search"></xf:dispatch>
				</xf:action>
			</xf:trigger>
		</h:p>
		<h:div class="file_ref_list">
			<xf:repeat nodeset="instance('XMLfiles')/dcm:file" id="repeat-files">
				<h:div>
					<xf:trigger appearance="minimal" hint="Click to select this file and close">
						<xf:label>
							<xf:output value="concat(dcm:composer,': ',dcm:title)"/>
						</xf:label>
						<xf:action ev:event="DOMActivate">
							<xf:setvalue ref="instance('data-instance')/m:meiHead/m:workDesc/m:work/m:relationList/m:relation[index('work_relations')]/@target"
								value="instance('XMLfiles')/dcm:file[index('repeat-files')]/dcm:link/@href"/>
							<xf:action if="instance('data-instance')/m:meiHead/m:workDesc/m:work/m:relationList/m:relation[index('work_relations')]/@label=''">
								<xf:setvalue ref="instance('data-instance')/m:meiHead/m:workDesc/m:work/m:relationList/m:relation[index('work_relations')]/@label"
									value="instance('XMLfiles')/dcm:file[index('repeat-files')]/dcm:title"/>
							</xf:action>
							<xxf:hide dialog="relation_dialog"/>
						</xf:action>
					</xf:trigger>
					<h:a class="help_plain"><h:img src="/../editor/images/id.png" style="margin-bottom: -2px;"/><h:span 
						class="comment" style="margin-top:0px; margin-left:-10px">File: <xf:output value="dcm:link/@href"/><xf:output value="@ref"/></h:span></h:a>
				</h:div>
			</xf:repeat>
		</h:div>
	</xxf:dialog>
	
	
	<xxf:dialog id="leave-warning-dialog" appearance="full">
		<!-- The requested URI must be stored in instance('temp')/target_uri prior to opening the dialog -->
		<xf:label>Warning – Editing external file</xf:label>
		<h:p>If you proceeed, this file will be closed and the file linked to 
			will be opened for editing instead.
		</h:p>
		<h:p>Do you want to proceed?</h:p>    
		<xf:trigger>
			<xf:label>Yes</xf:label>
			<xf:action ev:event="DOMActivate">
				<xxf:hide dialog="leave-warning-dialog"/>
				<xf:action if="instance('temp')/changed='true'">
					<xxf:show dialog="exit-warning-dialog"/>
				</xf:action>	
				<xf:action if="instance('temp')/changed='false'">
					<xf:load resource="{instance('temp')/target_uri}" show="replace"/>
				</xf:action>
			</xf:action>
		</xf:trigger>
		<xf:trigger>
			<xf:label>No</xf:label>
			<xf:action ev:event="DOMActivate">
				<xxf:hide dialog="leave-warning-dialog"/>
			</xf:action>
		</xf:trigger>
	</xxf:dialog>
	
</h:div>

