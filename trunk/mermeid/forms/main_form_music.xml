<?xml version="1.0" encoding="UTF-8"?>
<h:div xmlns:h="http://www.w3.org/1999/xhtml" 
	xmlns:xf="http://www.w3.org/2002/xforms" 
	xmlns:xxf="http://orbeon.org/oxf/xml/xforms"
	xmlns:dcm="http://www.kb.dk/dcm"
	xmlns:ev="http://www.w3.org/2001/xml-events"
	id="music-div">
	
	<xf:group ref="instance('data-instance')/m:meiHead/m:workDesc/m:work/m:expressionList">
		<h:div class="inputdiv">
			
			<xf:repeat nodeset="m:expression" id="repeat-expression">
				<xf:action ev:event="DOMFocusIn">
					<xf:setvalue ref="instance('temp')/music_outline/exp" value="index('repeat-expression')"/>
				</xf:action>
				<h:fieldset>
					<h:legend>
						<xf:group ref=".[count(../m:expression)=1]">
							Work 
						</xf:group>
						<xf:group ref=".[count(../m:expression)&gt;1]">
							Version
						</xf:group>
						<dcm:id/>
						<h:a class="help">?<h:span class="comment">Information at work or version level.<h:br/> 
							To create a new version, click the add- or copy-buttons on the right.<h:br/>
							To indicate the individual pieces (movements, acts or any other subdivision) in this work 
							or version, use "Components" below.<h:br/>
							In FRBR terms, versions and components correspond to the "expression" level.</h:span></h:a>
						<dcm:element-buttons 
							triggers="all" 
							nodeset="m:expression" 
							index="repeat-expression"
							origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression[1]"/>
						<h:br/>
					</h:legend>
					
					<dcm:expression-input ref="."/>
					
					
					
						<h:fieldset class="componentGrp">
							<h:legend class="componentGrp">Components <h:a class="help">?<h:span class="comment">Use components to list the individual 
								pieces (movements, acts, scenes, sections etc.) that constitute this 
								<xf:group ref=".[count(../../m:expression)=1]">
									work.
								</xf:group>
								<xf:group ref=".[count(../../m:expression)&gt;1]">
									version.
								</xf:group><h:br/>
								If there is no subdivision at this level, no components should be defined.<h:br/>
								Components may be nested to define several layers of components (e.g. a work 
								divided into acts, each divided into scenes)
							</h:span></h:a></h:legend>
							<!-- old all-in-one form
								
								<xf:trigger ref=".[not(m:componentGrp)]">
								<xf:label>Add components</xf:label>
								<xf:action ev:event="DOMActivate">
								<xf:insert nodeset="m:componentGrp" 
								origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression[1]/m:componentGrp"/>
								<xf:dispatch name="id-update" target="form-group"/>
								</xf:action>
								</xf:trigger>
								<xf:trigger ref=".[m:componentGrp and not(m:componentGrp/m:expression)]">
								<xf:label>Add components</xf:label>
								<xf:action ev:event="DOMActivate">
								<xf:insert context="m:componentGrp" 
								nodeset="m:expression"
								origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression[1]/m:componentGrp/m:expression[1]"/>
								<xf:dispatch name="id-update" target="form-group"/>
								</xf:action>
								</xf:trigger>
								<xf:group ref="m:componentGrp">
								<xf:repeat nodeset="m:expression" id="repeat-component">
								<xf:action ev:event="DOMFocusIn">
								<xf:setvalue ref="instance('temp')/music_outline/comp1" value="index('repeat-component')"/>
								</xf:action>
								<h:fieldset>
								<h:legend>Component
								<dcm:id/>
								<h:a class="help">?<h:span class="comment">Information at component level,
								i.e. movement, act, scene or other.</h:span></h:a>
								<dcm:element-buttons 
								triggers="up down add copy remove" 
								nodeset="m:expression" 
								index="repeat-component"
								origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression[1]/m:componentGrp/m:expression"/>
								<h:br/>
								</h:legend>
								
								<dcm:expression-input ref="."/>
								
								<h:fieldset>
								<h:legend>2<h:sup>nd</h:sup> sub-level components <h:a class="help">?<h:span class="comment">Use components to list the individual 
								pieces (movements, scenes, sections etc.) that constitute this part of the work.<h:br/>
								If there is no subdivision at this level, no components should be defined.
								</h:span></h:a></h:legend>    
								<xf:trigger ref=".[not(m:componentGrp)]">
								<xf:label>Add components</xf:label>
								<xf:insert nodeset="m:componentGrp" 
								ev:event="DOMActivate" 
								origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression[1]/m:componentGrp"/>
								</xf:trigger>
								<xf:trigger ref=".[m:componentGrp and not(m:componentGrp/m:expression)]">
								<xf:label>Add components</xf:label>
								<xf:action ev:event="DOMActivate">
								<xf:insert context="m:componentGrp" 
								nodeset="m:expression"
								ev:event="DOMActivate"
								origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression[1]/m:componentGrp/m:expression[1]"/>
								<xf:dispatch name="id-update" target="form-group"/>
								</xf:action>
								</xf:trigger>
								<xf:group ref="m:componentGrp">
								<xf:repeat nodeset="m:expression" id="repeat-sublevel2-component">
								<xf:action ev:event="DOMFocusIn">
								<xf:setvalue ref="instance('temp')/music_outline/comp2" value="index('repeat-sublevel2-component')"/>
								</xf:action>
								<h:fieldset>
								<h:legend>Component
								<dcm:id/>
								<h:a class="help">?<h:span class="comment">Information at component level,
								i.e. movement, act, scene or other.</h:span></h:a>
								<dcm:element-buttons 
								triggers="up down add copy remove" 
								nodeset="m:expression" 
								index="repeat-sublevel2-component"
								origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression[1]/m:componentGrp/m:expression"/>
								<h:br/>
								</h:legend>
								<dcm:expression-input ref="."/>
								</h:fieldset>
								</xf:repeat>
								</xf:group>
								</h:fieldset>
								
								</h:fieldset>
								</xf:repeat>
								
								</xf:group>-->
							
							<!-- testing new component list with external editor -->
							
							
							<xf:trigger ref=".[not(m:componentGrp)]">
								<xf:label>Add component group</xf:label>
								<xf:action ev:event="DOMActivate">
									<xf:insert nodeset="m:componentGrp" 
										origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression[1]/m:componentGrp"/>
									<xf:dispatch name="id-update" target="form-group"/>
								</xf:action>
							</xf:trigger>
							
							<xf:group ref="m:componentGrp">
							<xf:trigger ref=".[not(m:expression)]">
								<xf:label>Add components</xf:label>
								<xf:action ev:event="DOMActivate">
									<xf:insert  context="."
										nodeset="m:expression"
										origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression[1]/m:componentGrp/m:expression[1]"/>
									<xf:dispatch name="id-update" target="form-group"/>
								</xf:action>
							</xf:trigger>
							
							<h:table class="element_list" cellspacing="0" cellpadding="0" border="0">
									<xf:repeat nodeset="m:expression" id="component-list1">
										<h:tr>
											<h:td class="number_cell">
												<xf:group ref=".[string-length(@n)]"><xf:output value="@n"/>.&#160;</xf:group>
											</h:td>
											<h:td> 
												<xf:output value="m:titleStmt/m:title"/>
												<xf:group ref=".[normalize-space(m:titleStmt/m:title) and normalize-space(m:tempo)]">. </xf:group>
												<xf:output value="m:tempo"/>
												<xf:group ref=".[normalize-space(concat(@n,m:titleStmt/m:title,m:tempo))='']"> [No number, title or tempo] </xf:group>
											</h:td>
											<h:td>
												<dcm:id ref="."/>
												<xf:group ref=".[instance('temp')/file_exists='true']">
													<xf:trigger>
														<xf:label><h:img src="http:/editor/images/edit.gif" title="Open component editor"/> Edit</xf:label>
														<xf:action ev:event="DOMActivate">
															<xxf:variable name="uri" 
																select="concat(instance('parameters')/dcm:orbeon_dir,'?uri=',instance('parameters')/dcm:form_home,'expression_component_editor.xml&amp;doc=',instance('parameters')/dcm:xml_file,'&amp;id=',@xml:id)"/>
															<xf:action if="instance('temp')/changed='true'">
																<xf:setvalue ref="instance('temp')/target_uri" value="$uri"/>
																<xxf:show dialog="exit-warning-dialog"/>
															</xf:action>	
															<xf:action if="instance('temp')/changed='false'">
																<xf:load resource="{$uri}" show="replace"/>
															</xf:action>
														</xf:action>
													</xf:trigger>
												</xf:group>
												<xf:group ref=".[instance('temp')/file_exists!='true']">
													<h:small>File must be saved before components can be edited</h:small>
												</xf:group>
											</h:td>
											<h:td class="buttons_cell"><dcm:element-buttons triggers="all" nodeset="m:expression" index="component-list1" 
												origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression/m:componentGrp/m:expression"/></h:td>
										</h:tr>
										
										<!-- 2nd sub-level -->
										<!-- SOME ERRORS HERE 
											
										<xf:trigger ref=".[not(m:componentGrp)]">
											<xf:label>Add component group</xf:label>
											<xf:action ev:event="DOMActivate">
												<xf:insert nodeset="m:componentGrp" 
													origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression[1]/m:componentGrp"/>
												<xf:dispatch name="id-update" target="form-group"/>
											</xf:action>
										</xf:trigger>
										
										<xf:group ref="m:componentGrp">
										
										<xf:trigger ref=".[not(m:expression)]">
											<xf:label>Add components</xf:label>
											<xf:action ev:event="DOMActivate">
												<xf:insert context="."
													nodeset="m:expression"
													origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression[1]/m:componentGrp/m:expression[1]"/>
												<xf:dispatch name="id-update" target="form-group"/>
											</xf:action>
										</xf:trigger>
										
										
										<xf:repeat nodeset="m:expression" id="component-list2">
											<h:tr>
												<h:td class="number_cell">
													<xf:group ref=".[string-length(@n)]"><xf:output value="@n"/>.&#160;</xf:group>
												</h:td>
												<h:td> 
													<xf:output value="m:titleStmt/m:title"/>
													<xf:group ref=".[normalize-space(m:titleStmt/m:title) and normalize-space(m:tempo)]">. </xf:group>
													<xf:output value="m:tempo"/>
													<xf:group ref=".[normalize-space(concat(@n,m:titleStmt/m:title,m:tempo))='']"> [No number, title or tempo] </xf:group>
												</h:td>
												<h:td>
													<dcm:id ref="."/>
													<xf:group ref=".[instance('temp')/file_exists='true']">
														<xf:trigger>
															<xf:label><h:img src="http:/editor/images/edit.gif" title="Open component editor"/> Edit</xf:label>
															<xf:action ev:event="DOMActivate">
																<xxf:variable name="uri" 
																	select="concat(instance('parameters')/dcm:orbeon_dir,'?uri=',instance('parameters')/dcm:form_home,'expression_component_editor.xml&amp;doc=',instance('parameters')/dcm:xml_file,'&amp;id=',@xml:id)"/>
																<xf:action if="instance('temp')/changed='true'">
																	<xf:setvalue ref="instance('temp')/target_uri" value="$uri"/>
																	<xxf:show dialog="exit-warning-dialog"/>
																</xf:action>	
																<xf:action if="instance('temp')/changed='false'">
																	<xf:load resource="{$uri}" show="replace"/>
																</xf:action>
															</xf:action>
														</xf:trigger>
													</xf:group>
													<xf:group ref=".[instance('temp')/file_exists!='true']">
														<h:small>File must be saved before components can be edited</h:small>
													</xf:group>
												</h:td>
												<h:td class="buttons_cell"><dcm:element-buttons triggers="all" nodeset="m:expression" index="component-list2" 
													origin="instance('empty-instance')/m:meiHead/m:workDesc/m:work/m:expressionList/m:expression/m:componentGrp/m:expression"/></h:td>
											</h:tr>
										</xf:repeat>
										</xf:group>
										-->
										<!-- end 2nd sub-level -->
										
										
									</xf:repeat>
							</h:table>
							</xf:group>
						</h:fieldset>
					
					
				</h:fieldset>
			</xf:repeat>
			
			
			
			
			
		</h:div>
	</xf:group>
	<h:br clear="all"/>	
</h:div>
