#!/usr/bin/perl -w

use strict;
use XML::LibXML;
use XML::LibXSLT;
use URI::Escape;
use Getopt::Long;

binmode STDOUT,':raw';

my $reserved  = "^A-Za-z0-9/&?=:;$@#.?\-";

my $sheets    = join(',',
		     ("utils/transform_2010_to_2012.xsl",
		      "utils/add_ID.xsl",
		      "utils/add_MARC048_reg_values.xsl",
		      "utils/remove_empty_attributes.xsl"));

my $suffix    = "";
my $directory = "";
my $param     = "";

my $result = GetOptions (
    "sheets=s"    => \$sheets,
    "suffix=s"    => \$suffix,
    "param=s"     => \$param,
    "directory=s" => \$directory);

my $parser = new XML::LibXML;
my $xslt   = new XML::LibXSLT;

$xslt->register_function("urn:string", 
			 "escape",
			 sub {
			     my $str = shift; 
			     return uri_escape_utf8($str,$reserved);
			 });
my @sheet_list      = split /,/,$sheets;

my $find = "find $directory -name '*$suffix' -print";
my $in;
if ( open($in,"$find |") ) {

    while(my $source = <$in>)  {
	chomp $source;
	my $num_suffix = 0;
	my $in         = $source.$num_suffix;
	my $out        = "";
	print "#$source\n";
	system "cp $source $in";
	for(my $i=0;$i<$#sheet_list;$i++) {
	    my $stylesheet = $sheet_list[$i];
	    $num_suffix    = $i;
	    $in            = $source.$num_suffix;
	    $num_suffix++;
	    $out           = $source.$num_suffix;
	    system "saxon $in $stylesheet > $out"
	}

	system "mv $out $source";
	system 'rm '.$source."[0-9]";
    }

}



